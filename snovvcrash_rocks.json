{"title":"snovvcrash","url":"https://snovvcrash.rocks/","favicon":"https://snovvcrash.rocks/favicon-32x32.png","elements":[{"title":"On the Applicability of the Timeroasting Attack","contents":"<span class=\"post-meta\">Dec 8, 2024</span>\n        <span class=\"post-meta\">• </span>\n        <span class=\"post-meta time\">38 minutes to read </span>\n        <h3 class=\"post-list-h3\">\n          <a class=\"post-link\" href=\"/2024/12/08/applicability-of-the-timeroasting-attack.html\">\n            On the Applicability of the Timeroasting Attack\n          </a>\n        </h3>\n\n  <span class=\"tag-list\"><a href=\"/tags.html#active-directory\" class=\"post-tag\">active-directory</a> <a href=\"/tags.html#timeroasting\" class=\"post-tag\">timeroasting</a> </span><br><br>\n\n<p>Lately I’ve had an opportunity to experiment with the Timeroasting on an engagement, so here are my thoughts on the applicability of the attack in real life conditions with some examples along the way.</p>","link":"https://snovvcrash.rocks/2024/12/08/applicability-of-the-timeroasting-attack.html","retrieved":1737265073124},{"title":"Abuse VS Code Installation for LPE on macOS [Pentest Awards 2023]","contents":"<span class=\"post-meta\">May 19, 2024</span>\n        <span class=\"post-meta\">• </span>\n        <span class=\"post-meta time\">5 minutes to read </span>\n        <h3 class=\"post-list-h3\">\n          <a class=\"post-link\" href=\"/2024/05/19/vs-code-lpe-macos.html\">\n            Abuse VS Code Installation for LPE on macOS [Pentest Awards 2023]\n          </a>\n        </h3>\n\n  <span class=\"tag-list\"><a href=\"/tags.html#pentest-awards\" class=\"post-tag\">pentest-awards</a> <a href=\"/tags.html#xakep-ru\" class=\"post-tag\">xakep-ru</a> <a href=\"/tags.html#macos\" class=\"post-tag\">macos</a> <a href=\"/tags.html#phishing\" class=\"post-tag\">phishing</a> <a href=\"/tags.html#vs-code\" class=\"post-tag\">vs-code</a> </span><br><br>\n\n\n<p>Когда тебе нужно заскамить сотрудников техподдержки на угон их кред и привилегий в macOS (естественно, действуя в рамках контракта о пентесте), можно смело предлагать завершить установку легитимного ПО, которое ты предварительно кастомизировал. Для примера разберем, как это сделать с любимым всеми Visual Studio Code.</p>","link":"https://snovvcrash.rocks/2024/05/19/vs-code-lpe-macos.html","retrieved":1737265073127},{"title":"From DLL Side Load to Malicious SSP [Pentest Awards 2023]","contents":"<span class=\"post-meta\">May 19, 2024</span>\n        <span class=\"post-meta\">• </span>\n        <span class=\"post-meta time\">8 minutes to read </span>\n        <h3 class=\"post-list-h3\">\n          <a class=\"post-link\" href=\"/2024/05/19/from-dll-side-load-to-malicious-ssp.html\">\n            From DLL Side Load to Malicious SSP [Pentest Awards 2023]\n          </a>\n        </h3>\n\n  <span class=\"tag-list\"><a href=\"/tags.html#pentest-awards\" class=\"post-tag\">pentest-awards</a> <a href=\"/tags.html#xakep-ru\" class=\"post-tag\">xakep-ru</a> <a href=\"/tags.html#purple-teaming\" class=\"post-tag\">purple-teaming</a> <a href=\"/tags.html#dll-hijacking\" class=\"post-tag\">dll-hijacking</a> <a href=\"/tags.html#dll-side-loading\" class=\"post-tag\">dll-side-loading</a> <a href=\"/tags.html#ssp\" class=\"post-tag\">ssp</a> <a href=\"/tags.html#mimilib\" class=\"post-tag\">mimilib</a> </span><br><br>\n\n\n<p>Нескучный байпас средств защиты подразумевает разглашение приватного кода, который от этого, скорее всего, обесценится. Поэтому я решил рассказать интересный кейс из опыта участия в Purple Team. Нам удалось надурить кастомное правило СЗИ, нацеленное на мониторинг зловредных SSP-модулей.</p>","link":"https://snovvcrash.rocks/2024/05/19/from-dll-side-load-to-malicious-ssp.html","retrieved":1737265073134},{"title":"Newbie's Game Hacking Notes (ft. Turbo Overkill)","contents":"<span class=\"post-meta\">May 10, 2024</span>\n        <span class=\"post-meta\">• </span>\n        <span class=\"post-meta time\">21 minutes to read </span>\n        <h3 class=\"post-list-h3\">\n          <a class=\"post-link\" href=\"/2024/05/10/newbies-game-hacking-notes.html\">\n            Newbie's Game Hacking Notes (ft. Turbo Overkill)\n          </a>\n        </h3>\n\n  <span class=\"tag-list\"><a href=\"/tags.html#game-hacking\" class=\"post-tag\">game-hacking</a> <a href=\"/tags.html#cheat-engine\" class=\"post-tag\">cheat-engine</a> <a href=\"/tags.html#cheat-developement\" class=\"post-tag\">cheat-developement</a> <a href=\"/tags.html#trainer-developement\" class=\"post-tag\">trainer-developement</a> <a href=\"/tags.html#dll-injection\" class=\"post-tag\">dll-injection</a> </span><br><br>\n\n<p>A terse-comments blog of making myself more comfortable with Cheat Engine and the basics of cheats/trainers developement. Practice is based on the awesome Turbo Overkill FPS (v1.35).</p>","link":"https://snovvcrash.rocks/2024/05/10/newbies-game-hacking-notes.html","retrieved":1737265073134},{"title":"HTB{ Ascension }","contents":"<span class=\"post-meta\">Apr 30, 2024</span>\n        <span class=\"post-meta\">• </span>\n        <span class=\"post-meta time\">26 minutes to read </span>\n        <h3 class=\"post-list-h3\">\n          <a class=\"post-link\" href=\"/2024/04/30/htb-ascension.html\">\n            HTB{ Ascension }\n          </a>\n        </h3>\n\n  <span class=\"tag-list\"><a href=\"/tags.html#write-up\" class=\"post-tag\">write-up</a> <a href=\"/tags.html#hackthebox\" class=\"post-tag\">hackthebox</a> <a href=\"/tags.html#endgame\" class=\"post-tag\">endgame</a> <a href=\"/tags.html#active-directory\" class=\"post-tag\">active-directory</a> <a href=\"/tags.html#blind-sqli\" class=\"post-tag\">blind-sqli</a> <a href=\"/tags.html#sqlmap\" class=\"post-tag\">sqlmap</a> <a href=\"/tags.html#mssql\" class=\"post-tag\">mssql</a> <a href=\"/tags.html#mssql-agent-job\" class=\"post-tag\">mssql-agent-job</a> <a href=\"/tags.html#mssql-proxy\" class=\"post-tag\">mssql-proxy</a> <a href=\"/tags.html#inveigh\" class=\"post-tag\">inveigh</a> <a href=\"/tags.html#seatbelt\" class=\"post-tag\">seatbelt</a> <a href=\"/tags.html#sharpdpapi\" class=\"post-tag\">sharpdpapi</a> <a href=\"/tags.html#dsrm\" class=\"post-tag\">dsrm</a> <a href=\"/tags.html#portscan-ps1\" class=\"post-tag\">portscan-ps1</a> <a href=\"/tags.html#pivoting\" class=\"post-tag\">pivoting</a> <a href=\"/tags.html#double-hop\" class=\"post-tag\">double-hop</a> <a href=\"/tags.html#thycotic\" class=\"post-tag\">thycotic</a> <a href=\"/tags.html#secret-server\" class=\"post-tag\">secret-server</a> <a href=\"/tags.html#disable-firewall\" class=\"post-tag\">disable-firewall</a> <a href=\"/tags.html#aspx-webshell\" class=\"post-tag\">aspx-webshell</a> <a href=\"/tags.html#regeorg\" class=\"post-tag\">regeorg</a> <a href=\"/tags.html#neo-regeorg\" class=\"post-tag\">neo-regeorg</a> <a href=\"/tags.html#openssh-windows\" class=\"post-tag\">openssh-windows</a> <a href=\"/tags.html#slack\" class=\"post-tag\">slack</a> <a href=\"/tags.html#rubeus\" class=\"post-tag\">rubeus</a> <a href=\"/tags.html#asktgt\" class=\"post-tag\">asktgt</a> <a href=\"/tags.html#rbcd\" class=\"post-tag\">rbcd</a> <a href=\"/tags.html#powerview4\" class=\"post-tag\">powerview4</a> </span><br><br>\n\n<p>This write-up is all about pwning the Ascension Endgame from Hack The Box (written in August 2021).</p>","link":"https://snovvcrash.rocks/2024/04/30/htb-ascension.html","retrieved":1737265073137},{"title":"Python ❤️ SSPI: Teaching Impacket to Respect Windows SSO","contents":"<span class=\"post-meta\">Apr 30, 2024</span>\n        <span class=\"post-meta\">• </span>\n        <span class=\"post-meta time\">10 minutes to read </span>\n        <h3 class=\"post-list-h3\">\n          <a class=\"post-link\" href=\"/2024/04/30/impacket-sspi.html\">\n            Python ❤️ SSPI: Teaching Impacket to Respect Windows SSO\n          </a>\n        </h3>\n\n  <span class=\"tag-list\"><a href=\"/tags.html#pt-swarm\" class=\"post-tag\">pt-swarm</a> <a href=\"/tags.html#active-directory\" class=\"post-tag\">active-directory</a> <a href=\"/tags.html#kerberos\" class=\"post-tag\">kerberos</a> <a href=\"/tags.html#tgt-delegation\" class=\"post-tag\">tgt-delegation</a> <a href=\"/tags.html#impacket\" class=\"post-tag\">impacket</a> <a href=\"/tags.html#sspi\" class=\"post-tag\">sspi</a> </span><br><br>\n\n\n<p>Given the Bring Your Own Interpreter (BYOI) concept, the combination of Impacket usage and SSPI capabilities can allow attackers to fly under the radar of endpoint security mechanisms as well as custom network detection rules more efficiently. We will discuss it in more detail further in the article.</p>","link":"https://snovvcrash.rocks/2024/04/30/impacket-sspi.html","retrieved":1737265073138},{"title":"Змеиная пирамида. Запускаем малварь из слепой зоны EDR","contents":"<span class=\"post-meta\">Apr 5, 2023</span>\n        <span class=\"post-meta\">• </span>\n        <span class=\"post-meta time\">31 minutes to read </span>\n        <h3 class=\"post-list-h3\">\n          <a class=\"post-link\" href=\"/2023/04/05/python-pyramid.html\">\n            Змеиная пирамида. Запускаем малварь из слепой зоны EDR\n          </a>\n        </h3>\n\n  <span class=\"tag-list\"><a href=\"/tags.html#xakep-ru\" class=\"post-tag\">xakep-ru</a> <a href=\"/tags.html#red-teaming\" class=\"post-tag\">red-teaming</a> <a href=\"/tags.html#living-off-the-blindspot\" class=\"post-tag\">living-off-the-blindspot</a> <a href=\"/tags.html#maldev\" class=\"post-tag\">maldev</a> <a href=\"/tags.html#av-bypass\" class=\"post-tag\">av-bypass</a> <a href=\"/tags.html#edr-evasion\" class=\"post-tag\">edr-evasion</a> <a href=\"/tags.html#python\" class=\"post-tag\">python</a> <a href=\"/tags.html#iron-python\" class=\"post-tag\">iron-python</a> <a href=\"/tags.html#impacket\" class=\"post-tag\">impacket</a> </span><br><br>\n\n\n<p>В этой статье я покажу, как вооружить standalone-интерпретатор Python для загрузки “опасных” зависимостей прямо в память при помощи инструмента Pyramid (не путать с веб-фреймворком). Потенциально это позволяет обойти антивирусную защиту при пентесте и скрыть источник подозрительной телеметрии от EDR при операциях Red Team.</p>","link":"https://snovvcrash.rocks/2023/04/05/python-pyramid.html","retrieved":1737265073138},{"title":"Adopting Position Independent Shellcodes from Object Files in Memory for Threadless Injection","contents":"<span class=\"post-meta\">Feb 14, 2023</span>\n        <span class=\"post-meta\">• </span>\n        <span class=\"post-meta time\">9 minutes to read </span>\n        <h3 class=\"post-list-h3\">\n          <a class=\"post-link\" href=\"/2023/02/14/pic-generation-for-threadless-injection.html\">\n            Adopting Position Independent Shellcodes from Object Files in Memory for Threadless Injection\n          </a>\n        </h3>\n\n  <span class=\"tag-list\"><a href=\"/tags.html#maldev\" class=\"post-tag\">maldev</a> <a href=\"/tags.html#threadless-injection\" class=\"post-tag\">threadless-injection</a> <a href=\"/tags.html#function-stomping\" class=\"post-tag\">function-stomping</a> <a href=\"/tags.html#shellcode-injection\" class=\"post-tag\">shellcode-injection</a> <a href=\"/tags.html#shellcode-generation\" class=\"post-tag\">shellcode-generation</a> <a href=\"/tags.html#pic\" class=\"post-tag\">pic</a> <a href=\"/tags.html#winexec\" class=\"post-tag\">winexec</a> <a href=\"/tags.html#msfvenom\" class=\"post-tag\">msfvenom</a> </span><br><br>\n\n<p>In this blog I will describe a way to automate generation of Position Independent Shellcodes from object files in memory (by @NinjaParanoid) to be used in Threadless Process Injection (by @_EthicalChaos_).</p>","link":"https://snovvcrash.rocks/2023/02/14/pic-generation-for-threadless-injection.html","retrieved":1737265073140},{"title":"УдаленнаяКартошка0. Повышаем привилегии в AD через кросс-протокольную атаку NTLM Relay","contents":"<span class=\"post-meta\">Dec 30, 2022</span>\n        <span class=\"post-meta\">• </span>\n        <span class=\"post-meta time\">22 minutes to read </span>\n        <h3 class=\"post-list-h3\">\n          <a class=\"post-link\" href=\"/2022/12/30/remote-potato-0.html\">\n            УдаленнаяКартошка0. Повышаем привилегии в AD через кросс-протокольную атаку NTLM Relay\n          </a>\n        </h3>\n\n  <span class=\"tag-list\"><a href=\"/tags.html#xss-is\" class=\"post-tag\">xss-is</a> <a href=\"/tags.html#xakep-ru\" class=\"post-tag\">xakep-ru</a> <a href=\"/tags.html#internal-pentest\" class=\"post-tag\">internal-pentest</a> <a href=\"/tags.html#active-directory\" class=\"post-tag\">active-directory</a> <a href=\"/tags.html#eop\" class=\"post-tag\">eop</a> <a href=\"/tags.html#pivoting\" class=\"post-tag\">pivoting</a> <a href=\"/tags.html#tunneling\" class=\"post-tag\">tunneling</a> <a href=\"/tags.html#ntlm-relay\" class=\"post-tag\">ntlm-relay</a> <a href=\"/tags.html#dcom-rpc\" class=\"post-tag\">dcom-rpc</a> <a href=\"/tags.html#potatoes\" class=\"post-tag\">potatoes</a> <a href=\"/tags.html#remotepotato0\" class=\"post-tag\">remotepotato0</a> <a href=\"/tags.html#cobalt-strike\" class=\"post-tag\">cobalt-strike</a> <a href=\"/tags.html#impacket\" class=\"post-tag\">impacket</a> <a href=\"/tags.html#ntlmrelayx\" class=\"post-tag\">ntlmrelayx</a> </span><br><br>\n\n\n<p>Эта история относится к категории «байки с внутренних пентестов», когда мы попали в среду Active Directory, где члены группы безопасности Domain Users (все пользователи домена) обладали привилегией для удаленного подключения к контроллерам домена по протоколу RDP. Хоть это уже само по себе ужасная «мисконфига», потенциальный злоумышленник все еще должен найти способ для локального повышения привилегий на DC, что проблематично, если на системе стоят все хотфиксы. Здесь и приходит на помощью <strike>баг</strike> фича из серии Microsoft Won’t Fix List – кросс-сессионное провоцирование вынужденной аутентификации по протоколу RPC – которая при отсуствии защиты службы LDAP от атак NTLM Relay мгновенно подарит тебе «ключи от Королевства». В этой статье мы поговорим о различных вариациях проведения данной атаки с использованием эксплоита RemotePotato0, а также на этом примере обсудим, как можно спрятать сигнатуру исполняемого файла от статического анализа.</p>","link":"https://snovvcrash.rocks/2022/12/30/remote-potato-0.html","retrieved":1737265073140},{"title":"Флуктуация шелл-кода. Пишем инжектор для динамического шифрования полезной нагрузки в памяти","contents":"<span class=\"post-meta\">Aug 7, 2022</span>\n        <span class=\"post-meta\">• </span>\n        <span class=\"post-meta time\">31 minutes to read </span>\n        <h3 class=\"post-list-h3\">\n          <a class=\"post-link\" href=\"/2022/08/07/shellcode-fluctuation.html\">\n            Флуктуация шелл-кода. Пишем инжектор для динамического шифрования полезной нагрузки в памяти\n          </a>\n        </h3>\n\n  <span class=\"tag-list\"><a href=\"/tags.html#xakep-ru\" class=\"post-tag\">xakep-ru</a> <a href=\"/tags.html#maldev\" class=\"post-tag\">maldev</a> <a href=\"/tags.html#c2\" class=\"post-tag\">c2</a> <a href=\"/tags.html#covenant\" class=\"post-tag\">covenant</a> <a href=\"/tags.html#memory-evasion\" class=\"post-tag\">memory-evasion</a> <a href=\"/tags.html#shellcode-injection\" class=\"post-tag\">shellcode-injection</a> <a href=\"/tags.html#shellcode-fluctuation\" class=\"post-tag\">shellcode-fluctuation</a> <a href=\"/tags.html#api-hooking\" class=\"post-tag\">api-hooking</a> <a href=\"/tags.html#dotnet\" class=\"post-tag\">dotnet</a> <a href=\"/tags.html#csharp\" class=\"post-tag\">csharp</a> </span><br><br>\n\n\n<p>Сегодня поговорим об одной из продвинутых техник уклонения от средств защиты при использовании фреймворков Command &amp; Control – динамическом сокрытии шеллкода в памяти ожидающего процесса. Я соберу PoC из доступного на гитхабе кода и применю его к опенсорсным фреймворкам. Если взглянуть на список фич, которыми хвастаются все коммерческие фреймворки C2 стоимостью 100500 долларов в час (Cobalt Strike, Nighthawk, Brute Ratel C4), первой в этих списках значится, как правило, возможность уклонения от сканирования памяти запущенных процессов на предмет наличия сигнатур агентов этих самых C2. Что если попробовать воссоздать эту функцию самостоятельно? В статье я покажу, как я это сделал. Итак что же это за зверь такой, этот флуктуирующий шеллкод?</p>","link":"https://snovvcrash.rocks/2022/08/07/shellcode-fluctuation.html","retrieved":1737265073143},{"title":"Вызов мастеру ключей. Инжектим шеллкод в память KeePass, обойдя антивирус","contents":"<span class=\"post-meta\">Jun 1, 2022</span>\n        <span class=\"post-meta\">• </span>\n        <span class=\"post-meta time\">41 minutes to read </span>\n        <h3 class=\"post-list-h3\">\n          <a class=\"post-link\" href=\"/2022/06/01/keethief-syscalls.html\">\n            Вызов мастеру ключей. Инжектим шеллкод в память KeePass, обойдя антивирус\n          </a>\n        </h3>\n\n  <span class=\"tag-list\"><a href=\"/tags.html#xakep-ru\" class=\"post-tag\">xakep-ru</a> <a href=\"/tags.html#hackmag-com\" class=\"post-tag\">hackmag-com</a> <a href=\"/tags.html#maldev\" class=\"post-tag\">maldev</a> <a href=\"/tags.html#shellcode-injection\" class=\"post-tag\">shellcode-injection</a> <a href=\"/tags.html#dotnet\" class=\"post-tag\">dotnet</a> <a href=\"/tags.html#csharp\" class=\"post-tag\">csharp</a> <a href=\"/tags.html#dynamic-invocation\" class=\"post-tag\">dynamic-invocation</a> <a href=\"/tags.html#dinovke\" class=\"post-tag\">dinovke</a> <a href=\"/tags.html#keethief\" class=\"post-tag\">keethief</a> <a href=\"/tags.html#keetheft\" class=\"post-tag\">keetheft</a> <a href=\"/tags.html#keepass\" class=\"post-tag\">keepass</a> </span><br><br>\n\n\n<p>Недавно я столкнулся с ситуацией на пентесте, когда мне было необходимо вытащить мастер-пароль открытой базы данных KeePass из памяти процесса с помощью утилиты <strong>KeeThief</strong> из арсенала GhostPack. Все бы ничего, да вот EDR, следящий за системой, категорически не давал мне этого сделать – ведь под капотом KeeThief живет классическая процедура инъекции шеллкода в удаленный процесс, что не может остаться незамеченным в 2022 году. В этой статье мы рассмотрим замечательный сторонний механизм D/Invoke для C#, позволяющий эффективно дергать Windows API в обход средств защиты и перепишем KeeThief, чтобы его не ловил великий и ужасный «Касперский».</p>","link":"https://snovvcrash.rocks/2022/06/01/keethief-syscalls.html","retrieved":1737265073145},{"title":"Abusing Kerberos Constrained Delegation without Protocol Transition","contents":"<span class=\"post-meta\">Mar 6, 2022</span>\n        <span class=\"post-meta\">• </span>\n        <span class=\"post-meta time\">3 minutes to read </span>\n        <h3 class=\"post-list-h3\">\n          <a class=\"post-link\" href=\"/2022/03/06/abusing-kcd-without-protocol-transition.html\">\n            Abusing Kerberos Constrained Delegation without Protocol Transition\n          </a>\n        </h3>\n\n  <span class=\"tag-list\"><a href=\"/tags.html#internal-pentest\" class=\"post-tag\">internal-pentest</a> <a href=\"/tags.html#active-directory\" class=\"post-tag\">active-directory</a> <a href=\"/tags.html#kerberos\" class=\"post-tag\">kerberos</a> <a href=\"/tags.html#constrained-delegation\" class=\"post-tag\">constrained-delegation</a> <a href=\"/tags.html#s4u2self\" class=\"post-tag\">s4u2self</a> <a href=\"/tags.html#s4u2proxy\" class=\"post-tag\">s4u2proxy</a> <a href=\"/tags.html#rubeus\" class=\"post-tag\">rubeus</a> </span><br><br>\n\n<p>In this blog post I will go through a study case in abusing Kerberos constrained delegation without protocol transition (Kerberos only authentication).</p>","link":"https://snovvcrash.rocks/2022/03/06/abusing-kcd-without-protocol-transition.html","retrieved":1737265073147},{"title":"HTB{ RPG }","contents":"<span class=\"post-meta\">Aug 7, 2021</span>\n        <span class=\"post-meta\">• </span>\n        <span class=\"post-meta time\">23 minutes to read </span>\n        <h3 class=\"post-list-h3\">\n          <a class=\"post-link\" href=\"/2021/08/07/htb-rpg.html\">\n            HTB{ RPG }\n          </a>\n        </h3>\n\n  <span class=\"tag-list\"><a href=\"/tags.html#write-up\" class=\"post-tag\">write-up</a> <a href=\"/tags.html#hackthebox\" class=\"post-tag\">hackthebox</a> <a href=\"/tags.html#endgame\" class=\"post-tag\">endgame</a> <a href=\"/tags.html#active-directory\" class=\"post-tag\">active-directory</a> <a href=\"/tags.html#jfrog\" class=\"post-tag\">jfrog</a> <a href=\"/tags.html#artifactory\" class=\"post-tag\">artifactory</a> <a href=\"/tags.html#ssrf\" class=\"post-tag\">ssrf</a> <a href=\"/tags.html#cve-2019-19937\" class=\"post-tag\">cve-2019-19937</a> <a href=\"/tags.html#dnspy\" class=\"post-tag\">dnspy</a> <a href=\"/tags.html#rocket-chat\" class=\"post-tag\">rocket-chat</a> <a href=\"/tags.html#rest-api\" class=\"post-tag\">rest-api</a> <a href=\"/tags.html#mongodb\" class=\"post-tag\">mongodb</a> <a href=\"/tags.html#pivoting\" class=\"post-tag\">pivoting</a> <a href=\"/tags.html#chisel\" class=\"post-tag\">chisel</a> <a href=\"/tags.html#lpe\" class=\"post-tag\">lpe</a> <a href=\"/tags.html#winpeas\" class=\"post-tag\">winpeas</a> <a href=\"/tags.html#av-bypass\" class=\"post-tag\">av-bypass</a> <a href=\"/tags.html#ebowla\" class=\"post-tag\">ebowla</a> <a href=\"/tags.html#putty\" class=\"post-tag\">putty</a> <a href=\"/tags.html#puttyrider\" class=\"post-tag\">puttyrider</a> <a href=\"/tags.html#keyscan\" class=\"post-tag\">keyscan</a> <a href=\"/tags.html#cve-2020-1313\" class=\"post-tag\">cve-2020-1313</a> <a href=\"/tags.html#restricted-admin\" class=\"post-tag\">restricted-admin</a> <a href=\"/tags.html#procmon\" class=\"post-tag\">procmon</a> <a href=\"/tags.html#gnome-keyring\" class=\"post-tag\">gnome-keyring</a> <a href=\"/tags.html#mimipenguin\" class=\"post-tag\">mimipenguin</a> <a href=\"/tags.html#wmi\" class=\"post-tag\">wmi</a> <a href=\"/tags.html#invoke-wmimethod\" class=\"post-tag\">invoke-wmimethod</a> <a href=\"/tags.html#lastpass\" class=\"post-tag\">lastpass</a> <a href=\"/tags.html#lastpass-vault-parser\" class=\"post-tag\">lastpass-vault-parser</a> <a href=\"/tags.html#rpcclient\" class=\"post-tag\">rpcclient</a> <a href=\"/tags.html#ntuser-dat\" class=\"post-tag\">ntuser-dat</a> <a href=\"/tags.html#forensics\" class=\"post-tag\">forensics</a> <a href=\"/tags.html#winscp\" class=\"post-tag\">winscp</a> <a href=\"/tags.html#winscppasswd\" class=\"post-tag\">winscppasswd</a> <a href=\"/tags.html#runascs\" class=\"post-tag\">runascs</a> <a href=\"/tags.html#responder\" class=\"post-tag\">responder</a> <a href=\"/tags.html#proxy-pac\" class=\"post-tag\">proxy-pac</a> <a href=\"/tags.html#rubeus\" class=\"post-tag\">rubeus</a> <a href=\"/tags.html#rubeus-asktgt\" class=\"post-tag\">rubeus-asktgt</a> <a href=\"/tags.html#rbcd\" class=\"post-tag\">rbcd</a> <a href=\"/tags.html#rbcd-permissions\" class=\"post-tag\">rbcd-permissions</a> <a href=\"/tags.html#powerview4\" class=\"post-tag\">powerview4</a> <a href=\"/tags.html#impacket\" class=\"post-tag\">impacket</a> <a href=\"/tags.html#bronze-bit\" class=\"post-tag\">bronze-bit</a> <a href=\"/tags.html#efs\" class=\"post-tag\">efs</a> </span><br><br>\n\n<p>This write-up is all about pwning the RPG Endgame from Hack The Box.</p>","link":"https://snovvcrash.rocks/2021/08/07/htb-rpg.html","retrieved":1737265073149},{"title":"Leveraging PrintNightmare to Abuse RBCD and DCSync the Domain","contents":"<span class=\"post-meta\">Jun 30, 2021</span>\n        <span class=\"post-meta\">• </span>\n        <span class=\"post-meta time\">7 minutes to read </span>\n        <h3 class=\"post-list-h3\">\n          <a class=\"post-link\" href=\"/2021/06/30/leveraging-printnightmare-to-abuse-rbcd.html\">\n            Leveraging PrintNightmare to Abuse RBCD and DCSync the Domain\n          </a>\n        </h3>\n\n  <span class=\"tag-list\"><a href=\"/tags.html#internal-pentest\" class=\"post-tag\">internal-pentest</a> <a href=\"/tags.html#active-directory\" class=\"post-tag\">active-directory</a> <a href=\"/tags.html#print-spooler\" class=\"post-tag\">print-spooler</a> <a href=\"/tags.html#printer-bug\" class=\"post-tag\">printer-bug</a> <a href=\"/tags.html#cve-2021-16751\" class=\"post-tag\">cve-2021-16751</a> <a href=\"/tags.html#cve-2021-34527\" class=\"post-tag\">cve-2021-34527</a> <a href=\"/tags.html#arbitary-file-write\" class=\"post-tag\">arbitary-file-write</a> <a href=\"/tags.html#impacket\" class=\"post-tag\">impacket</a> <a href=\"/tags.html#rbcd\" class=\"post-tag\">rbcd</a> </span><br><br>\n\n<p>A relatively stealthy way to exploit PrintNightmare (CVE-2021-1675 / CVE-2021-34527) by configuring and abusing RBCD on a domain controller.</p>","link":"https://snovvcrash.rocks/2021/06/30/leveraging-printnightmare-to-abuse-rbcd.html","retrieved":1737265073151},{"title":"A Note on Calculating Kerberos Keys for AD Accounts","contents":"<span class=\"post-meta\">May 21, 2021</span>\n        <span class=\"post-meta\">• </span>\n        <span class=\"post-meta time\">4 minutes to read </span>\n        <h3 class=\"post-list-h3\">\n          <a class=\"post-link\" href=\"/2021/05/21/calculating-kerberos-keys.html\">\n            A Note on Calculating Kerberos Keys for AD Accounts\n          </a>\n        </h3>\n\n  <span class=\"tag-list\"><a href=\"/tags.html#internal-pentest\" class=\"post-tag\">internal-pentest</a> <a href=\"/tags.html#active-directory\" class=\"post-tag\">active-directory</a> <a href=\"/tags.html#kerberos\" class=\"post-tag\">kerberos</a> <a href=\"/tags.html#unconstrained-delegation\" class=\"post-tag\">unconstrained-delegation</a> <a href=\"/tags.html#rbcd\" class=\"post-tag\">rbcd</a> <a href=\"/tags.html#bronze-bit\" class=\"post-tag\">bronze-bit</a> <a href=\"/tags.html#python\" class=\"post-tag\">python</a> <a href=\"/tags.html#krbrelayx\" class=\"post-tag\">krbrelayx</a> <a href=\"/tags.html#impacket\" class=\"post-tag\">impacket</a> </span><br><br>\n\n<p>A short memo on how to properly calculate Kerberos keys for different types of Active Directory accounts in context of decrypting TGS tickets during delegation attacks.</p>","link":"https://snovvcrash.rocks/2021/05/21/calculating-kerberos-keys.html","retrieved":1737265073152},{"title":"Exploiting CVE-2020-10977 on Old Versions of GitLab CE/EE","contents":"<span class=\"post-meta\">Feb 21, 2021</span>\n        <span class=\"post-meta\">• </span>\n        <span class=\"post-meta time\">14 minutes to read </span>\n        <h3 class=\"post-list-h3\">\n          <a class=\"post-link\" href=\"/2021/02/21/exploiting-cve-2020-10977-on-old-gitlab.html\">\n            Exploiting CVE-2020-10977 on Old Versions of GitLab CE/EE\n          </a>\n        </h3>\n\n  <span class=\"tag-list\"><a href=\"/tags.html#internal-pentest\" class=\"post-tag\">internal-pentest</a> <a href=\"/tags.html#gitlab\" class=\"post-tag\">gitlab</a> <a href=\"/tags.html#cve-2020-10977\" class=\"post-tag\">cve-2020-10977</a> <a href=\"/tags.html#docker\" class=\"post-tag\">docker</a> <a href=\"/tags.html#path-traversal\" class=\"post-tag\">path-traversal</a> <a href=\"/tags.html#lfi\" class=\"post-tag\">lfi</a> <a href=\"/tags.html#reset-password\" class=\"post-tag\">reset-password</a> </span><br><br>\n\n<p>In this post I will demonstrate how CVE-2020-10977 path traversal vulnerability can be exploited on old versions of GitLab to drop a registered user’s password.</p>","link":"https://snovvcrash.rocks/2021/02/21/exploiting-cve-2020-10977-on-old-gitlab.html","retrieved":1737265073154},{"title":"HTB{ Hades }","contents":"<span class=\"post-meta\">Dec 28, 2020</span>\n        <span class=\"post-meta\">• </span>\n        <span class=\"post-meta time\">52 minutes to read </span>\n        <h3 class=\"post-list-h3\">\n          <a class=\"post-link\" href=\"/2020/12/28/htb-hades.html\">\n            HTB{ Hades }\n          </a>\n        </h3>\n\n  <span class=\"tag-list\"><a href=\"/tags.html#write-up\" class=\"post-tag\">write-up</a> <a href=\"/tags.html#hackthebox\" class=\"post-tag\">hackthebox</a> <a href=\"/tags.html#endgame\" class=\"post-tag\">endgame</a> <a href=\"/tags.html#active-directory\" class=\"post-tag\">active-directory</a> <a href=\"/tags.html#cmdi\" class=\"post-tag\">cmdi</a> <a href=\"/tags.html#msf\" class=\"post-tag\">msf</a> <a href=\"/tags.html#msfvenom\" class=\"post-tag\">msfvenom</a> <a href=\"/tags.html#revsocks\" class=\"post-tag\">revsocks</a> <a href=\"/tags.html#proxychains-ng\" class=\"post-tag\">proxychains-ng</a> <a href=\"/tags.html#pivoting\" class=\"post-tag\">pivoting</a> <a href=\"/tags.html#aspreproast\" class=\"post-tag\">aspreproast</a> <a href=\"/tags.html#ms-rprn\" class=\"post-tag\">ms-rprn</a> <a href=\"/tags.html#printer-bug\" class=\"post-tag\">printer-bug</a> <a href=\"/tags.html#rpcdump-py\" class=\"post-tag\">rpcdump-py</a> <a href=\"/tags.html#dementor-py\" class=\"post-tag\">dementor-py</a> <a href=\"/tags.html#silver-ticket\" class=\"post-tag\">silver-ticket</a> <a href=\"/tags.html#dnsmasq\" class=\"post-tag\">dnsmasq</a> <a href=\"/tags.html#services-py\" class=\"post-tag\">services-py</a> <a href=\"/tags.html#post-server-py\" class=\"post-tag\">post-server-py</a> <a href=\"/tags.html#net-share\" class=\"post-tag\">net-share</a> <a href=\"/tags.html#sam\" class=\"post-tag\">sam</a> <a href=\"/tags.html#secretsdump-py\" class=\"post-tag\">secretsdump-py</a> <a href=\"/tags.html#vss\" class=\"post-tag\">vss</a> <a href=\"/tags.html#mimikatz\" class=\"post-tag\">mimikatz</a> <a href=\"/tags.html#kiwi\" class=\"post-tag\">kiwi</a> <a href=\"/tags.html#dpapi\" class=\"post-tag\">dpapi</a> <a href=\"/tags.html#bloodhound\" class=\"post-tag\">bloodhound</a> <a href=\"/tags.html#rbcd\" class=\"post-tag\">rbcd</a> <a href=\"/tags.html#powermad\" class=\"post-tag\">powermad</a> <a href=\"/tags.html#powerview\" class=\"post-tag\">powerview</a> <a href=\"/tags.html#rubeus\" class=\"post-tag\">rubeus</a> <a href=\"/tags.html#protocol-transition\" class=\"post-tag\">protocol-transition</a> <a href=\"/tags.html#s4u2self\" class=\"post-tag\">s4u2self</a> <a href=\"/tags.html#s4u2proxy\" class=\"post-tag\">s4u2proxy</a> <a href=\"/tags.html#http-spnego\" class=\"post-tag\">http-spnego</a> <a href=\"/tags.html#addcomputer-py\" class=\"post-tag\">addcomputer-py</a> <a href=\"/tags.html#inveigh\" class=\"post-tag\">inveigh</a> <a href=\"/tags.html#adidns\" class=\"post-tag\">adidns</a> <a href=\"/tags.html#hashcat\" class=\"post-tag\">hashcat</a> <a href=\"/tags.html#hashcat-rules\" class=\"post-tag\">hashcat-rules</a> <a href=\"/tags.html#password-reuse\" class=\"post-tag\">password-reuse</a> <a href=\"/tags.html#protected-users\" class=\"post-tag\">protected-users</a> <a href=\"/tags.html#rdp\" class=\"post-tag\">rdp</a> <a href=\"/tags.html#docker-machine\" class=\"post-tag\">docker-machine</a> <a href=\"/tags.html#ldapsearch\" class=\"post-tag\">ldapsearch</a> <a href=\"/tags.html#windapsearch-py\" class=\"post-tag\">windapsearch-py</a> </span><br><br>\n\n<p>In this walkthrough I will show how to own the Hades Endgame from Hack The Box. For me it was the most mesmerizing experience I have got at HTB so far. Hades simulates a small Active Directory environment full of vulnerabilities &amp; misconfigurations which can be exploited to compromise the whole domain. This lab offers you an opportunity to play around with AS-REP Roasting, exploiting Printer Bug from Linux, decrypting DPAPI secrets, abusing Kerberos resource-based constrained delegation and spoofing Active Directory-integrated DNS alongside with some other challenges of dealing with enterprise infrastructure. Let the madness begin!</p>","link":"https://snovvcrash.rocks/2020/12/28/htb-hades.html","retrieved":1737265073155},{"title":"Pretending to Be smbpasswd with impacket","contents":"<span class=\"post-meta\">Oct 31, 2020</span>\n        <span class=\"post-meta\">• </span>\n        <span class=\"post-meta time\">5 minutes to read </span>\n        <h3 class=\"post-list-h3\">\n          <a class=\"post-link\" href=\"/2020/10/31/pretending-to-be-smbpasswd-with-impacket.html\">\n            Pretending to Be smbpasswd with impacket\n          </a>\n        </h3>\n\n  <span class=\"tag-list\"><a href=\"/tags.html#notes\" class=\"post-tag\">notes</a> <a href=\"/tags.html#hackthebox\" class=\"post-tag\">hackthebox</a> <a href=\"/tags.html#machine\" class=\"post-tag\">machine</a> <a href=\"/tags.html#windows\" class=\"post-tag\">windows</a> <a href=\"/tags.html#null-session\" class=\"post-tag\">null-session</a> <a href=\"/tags.html#smb\" class=\"post-tag\">smb</a> <a href=\"/tags.html#dcerpc\" class=\"post-tag\">dcerpc</a> <a href=\"/tags.html#ms-samr\" class=\"post-tag\">ms-samr</a> <a href=\"/tags.html#wireshark\" class=\"post-tag\">wireshark</a> <a href=\"/tags.html#smbpasswd\" class=\"post-tag\">smbpasswd</a> <a href=\"/tags.html#smbclient-py\" class=\"post-tag\">smbclient-py</a> <a href=\"/tags.html#rpcclient\" class=\"post-tag\">rpcclient</a> <a href=\"/tags.html#chgpassworduser2\" class=\"post-tag\">chgpassworduser2</a> <a href=\"/tags.html#python\" class=\"post-tag\">python</a> <a href=\"/tags.html#impacket\" class=\"post-tag\">impacket</a> <a href=\"/tags.html#password-policies\" class=\"post-tag\">password-policies</a> </span><br><br>\n\n<p>For me the most interesting aspect of pwning the Fuse machine from HTB was dealing with an expired domain user password. I found no other tools except smbpasswd to invoke such a password change remotely from Linux which seemed odd to me. So I decided to create a simple Python script with impacket which binds to the \\samr pipe over SMB (MSRPC-SAMR) with a null session and calls SamrUnicodeChangePasswordUser2 to trigger the password change.</p>","link":"https://snovvcrash.rocks/2020/10/31/pretending-to-be-smbpasswd-with-impacket.html","retrieved":1737265073156},{"title":"Blind SSRF with Oracle WebLogic Deserialization","contents":"<span class=\"post-meta\">Sep 26, 2020</span>\n        <span class=\"post-meta\">• </span>\n        <span class=\"post-meta time\">6 minutes to read </span>\n        <h3 class=\"post-list-h3\">\n          <a class=\"post-link\" href=\"/2020/09/26/blind-ssrf-with-oracle-weblogic-deserialization.html\">\n            Blind SSRF with Oracle WebLogic Deserialization\n          </a>\n        </h3>\n\n  <span class=\"tag-list\"><a href=\"/tags.html#external-pentest\" class=\"post-tag\">external-pentest</a> <a href=\"/tags.html#oracle\" class=\"post-tag\">oracle</a> <a href=\"/tags.html#weblogic\" class=\"post-tag\">weblogic</a> <a href=\"/tags.html#java-deserialization\" class=\"post-tag\">java-deserialization</a> <a href=\"/tags.html#bind-ssrf\" class=\"post-tag\">bind-ssrf</a> <a href=\"/tags.html#dns-rebinding\" class=\"post-tag\">dns-rebinding</a> <a href=\"/tags.html#python\" class=\"post-tag\">python</a> </span><br><br>\n\n<p>A way to get an impact from exploiting Oracle WebLogic Server Java deserialization vulnerabilities (CVE-2017-3506, CVE-2017-10271, CVE-2019-2725, CVE-2019-2729, etc.) without triggering RCE through an SSRF attack.</p>","link":"https://snovvcrash.rocks/2020/09/26/blind-ssrf-with-oracle-weblogic-deserialization.html","retrieved":1737265073158},{"title":"Playing with HTB{ Multimaster }","contents":"<span class=\"post-meta\">Sep 19, 2020</span>\n        <span class=\"post-meta\">• </span>\n        <span class=\"post-meta time\">6 minutes to read </span>\n        <h3 class=\"post-list-h3\">\n          <a class=\"post-link\" href=\"/2020/09/19/htb-multimaster-notes.html\">\n            Playing with HTB{ Multimaster }\n          </a>\n        </h3>\n\n  <span class=\"tag-list\"><a href=\"/tags.html#notes\" class=\"post-tag\">notes</a> <a href=\"/tags.html#hackthebox\" class=\"post-tag\">hackthebox</a> <a href=\"/tags.html#machine\" class=\"post-tag\">machine</a> <a href=\"/tags.html#windows\" class=\"post-tag\">windows</a> <a href=\"/tags.html#mssql\" class=\"post-tag\">mssql</a> <a href=\"/tags.html#sql-injection\" class=\"post-tag\">sql-injection</a> <a href=\"/tags.html#sqlmap\" class=\"post-tag\">sqlmap</a> <a href=\"/tags.html#sqlmap-tamper\" class=\"post-tag\">sqlmap-tamper</a> <a href=\"/tags.html#rid-cycling\" class=\"post-tag\">rid-cycling</a> </span><br><br>\n\n<p>Automate MS SQL injection with a custom sqlmap tamper script to bypass WAF through a UTF-16BE encoded JSON payload. Enumerate AD domain users via RID cycling from within the MS SQL DBMS.</p>","link":"https://snovvcrash.rocks/2020/09/19/htb-multimaster-notes.html","retrieved":1737265073160},{"title":"Tuning PEAS for Fun and Profit","contents":"<span class=\"post-meta\">Aug 22, 2020</span>\n        <span class=\"post-meta\">• </span>\n        <span class=\"post-meta time\">8 minutes to read </span>\n        <h3 class=\"post-list-h3\">\n          <a class=\"post-link\" href=\"/2020/08/22/tuning-peas-for-fun-and-profit.html\">\n            Tuning PEAS for Fun and Profit\n          </a>\n        </h3>\n\n  <span class=\"tag-list\"><a href=\"/tags.html#external-pentest\" class=\"post-tag\">external-pentest</a> <a href=\"/tags.html#exchange\" class=\"post-tag\">exchange</a> <a href=\"/tags.html#activesync\" class=\"post-tag\">activesync</a> <a href=\"/tags.html#peas\" class=\"post-tag\">peas</a> <a href=\"/tags.html#python\" class=\"post-tag\">python</a> </span><br><br>\n\n<p>At the recent external pentest engagement I had a feeling that PEAS (Python Exchange ActiveSync client) is missing some handy features. For example, crawling shared folders and auto downloading discovered files would be a nice function to have as well as brute forcing potential shares by a wordlist. To save time I wrote a draft script at the time of the pentest, but then I decided to fork PEAS project and tune the source code.</p>","link":"https://snovvcrash.rocks/2020/08/22/tuning-peas-for-fun-and-profit.html","retrieved":1737265073161},{"title":"Playing with HTB{ Patents }","contents":"<span class=\"post-meta\">May 16, 2020</span>\n        <span class=\"post-meta\">• </span>\n        <span class=\"post-meta time\">6 minutes to read </span>\n        <h3 class=\"post-list-h3\">\n          <a class=\"post-link\" href=\"/2020/05/16/htb-patents-notes.html\">\n            Playing with HTB{ Patents }\n          </a>\n        </h3>\n\n  <span class=\"tag-list\"><a href=\"/tags.html#notes\" class=\"post-tag\">notes</a> <a href=\"/tags.html#hackthebox\" class=\"post-tag\">hackthebox</a> <a href=\"/tags.html#machine\" class=\"post-tag\">machine</a> <a href=\"/tags.html#linux\" class=\"post-tag\">linux</a> <a href=\"/tags.html#docx\" class=\"post-tag\">docx</a> <a href=\"/tags.html#xxe\" class=\"post-tag\">xxe</a> <a href=\"/tags.html#python\" class=\"post-tag\">python</a> <a href=\"/tags.html#scapy\" class=\"post-tag\">scapy</a> </span><br><br>\n\n<p>Automate crafting malicious DOCX for blind XXE-OOB with external DTD using Python and Scapy.</p>","link":"https://snovvcrash.rocks/2020/05/16/htb-patents-notes.html","retrieved":1737265073163},{"title":"О дотфайлах, персонализации и Kali","contents":"<span class=\"post-meta\">May 13, 2020</span>\n        <span class=\"post-meta\">• </span>\n        <span class=\"post-meta time\">10 minutes to read </span>\n        <h3 class=\"post-list-h3\">\n          <a class=\"post-link\" href=\"/2020/05/13/dotfiles-and-personalization.html\">\n            О дотфайлах, персонализации и Kali\n          </a>\n        </h3>\n\n  <span class=\"tag-list\"><a href=\"/tags.html#xakep-ru\" class=\"post-tag\">xakep-ru</a> <a href=\"/tags.html#notes\" class=\"post-tag\">notes</a> <a href=\"/tags.html#personalization\" class=\"post-tag\">personalization</a> <a href=\"/tags.html#dotfiles\" class=\"post-tag\">dotfiles</a> <a href=\"/tags.html#linux\" class=\"post-tag\">linux</a> <a href=\"/tags.html#windows\" class=\"post-tag\">windows</a> <a href=\"/tags.html#wsl\" class=\"post-tag\">wsl</a> <a href=\"/tags.html#zsh\" class=\"post-tag\">zsh</a> <a href=\"/tags.html#tmux\" class=\"post-tag\">tmux</a> <a href=\"/tags.html#tilix\" class=\"post-tag\">tilix</a> <a href=\"/tags.html#wsltty\" class=\"post-tag\">wsltty</a> <a href=\"/tags.html#kali-setup\" class=\"post-tag\">kali-setup</a> </span><br><br>\n\n\n<p>В недавнем времени мне приходилось часто разворачивать свою рабочую среду (в частности, Kali Linux) на новых машинах: то на железе, то на виртуалках, то снова на железе… В общем, ты понял. В какой-то момент мне надоели рутинные действия, и я решил извлечь из этой ситуации максимальную пользу для себя и окружающих. В этой статье поговорим о том, как можно организовать хранение своих дотфайлов, чтобы более-менее автоматизировать процесс настройки и персонализации различных ОС для дома и работы.</p>","link":"https://snovvcrash.rocks/2020/05/13/dotfiles-and-personalization.html","retrieved":1737265073164},{"title":"Об обнаружении субдоменов","contents":"<span class=\"post-meta\">May 10, 2020</span>\n        <span class=\"post-meta\">• </span>\n        <span class=\"post-meta time\">8 minutes to read </span>\n        <h3 class=\"post-list-h3\">\n          <a class=\"post-link\" href=\"/2020/05/10/subdomain-discovery.html\">\n            Об обнаружении субдоменов\n          </a>\n        </h3>\n\n  <span class=\"tag-list\"><a href=\"/tags.html#notes\" class=\"post-tag\">notes</a> <a href=\"/tags.html#external-pentest\" class=\"post-tag\">external-pentest</a> <a href=\"/tags.html#osint\" class=\"post-tag\">osint</a> <a href=\"/tags.html#dns-enumeration\" class=\"post-tag\">dns-enumeration</a> <a href=\"/tags.html#subdomain-discovery\" class=\"post-tag\">subdomain-discovery</a> <a href=\"/tags.html#amass\" class=\"post-tag\">amass</a> <a href=\"/tags.html#knockpy\" class=\"post-tag\">knockpy</a> <a href=\"/tags.html#altdns\" class=\"post-tag\">altdns</a> <a href=\"/tags.html#massdns\" class=\"post-tag\">massdns</a> <a href=\"/tags.html#methodology\" class=\"post-tag\">methodology</a> </span><br><br>\n\n<p>Инструментарий и краткая методика для обнаружения субдоменов при проведении внешнего пентеста / анализа веб-приложений / конкурентной разведки.</p>","link":"https://snovvcrash.rocks/2020/05/10/subdomain-discovery.html","retrieved":1737265073165},{"title":"HTB{ Reddish }","contents":"<span class=\"post-meta\">Mar 17, 2020</span>\n        <span class=\"post-meta\">• </span>\n        <span class=\"post-meta time\">31 minutes to read </span>\n        <h3 class=\"post-list-h3\">\n          <a class=\"post-link\" href=\"/2020/03/17/htb-reddish.html\">\n            HTB{ Reddish }\n          </a>\n        </h3>\n\n  <span class=\"tag-list\"><a href=\"/tags.html#xakep-ru\" class=\"post-tag\">xakep-ru</a> <a href=\"/tags.html#hackmag-com\" class=\"post-tag\">hackmag-com</a> <a href=\"/tags.html#write-up\" class=\"post-tag\">write-up</a> <a href=\"/tags.html#hackthebox\" class=\"post-tag\">hackthebox</a> <a href=\"/tags.html#machine\" class=\"post-tag\">machine</a> <a href=\"/tags.html#linux\" class=\"post-tag\">linux</a> <a href=\"/tags.html#node-red\" class=\"post-tag\">node-red</a> <a href=\"/tags.html#lse-sh\" class=\"post-tag\">lse-sh</a> <a href=\"/tags.html#networking\" class=\"post-tag\">networking</a> <a href=\"/tags.html#host-discovery\" class=\"post-tag\">host-discovery</a> <a href=\"/tags.html#ping-sweep\" class=\"post-tag\">ping-sweep</a> <a href=\"/tags.html#static-nmap\" class=\"post-tag\">static-nmap</a> <a href=\"/tags.html#pivoting\" class=\"post-tag\">pivoting</a> <a href=\"/tags.html#ssh-reverse-tcp\" class=\"post-tag\">ssh-reverse-tcp</a> <a href=\"/tags.html#dropbear\" class=\"post-tag\">dropbear</a> <a href=\"/tags.html#tunneling\" class=\"post-tag\">tunneling</a> <a href=\"/tags.html#port-forwarding\" class=\"post-tag\">port-forwarding</a> <a href=\"/tags.html#chisel\" class=\"post-tag\">chisel</a> <a href=\"/tags.html#upx\" class=\"post-tag\">upx</a> <a href=\"/tags.html#file-transfer\" class=\"post-tag\">file-transfer</a> <a href=\"/tags.html#redis\" class=\"post-tag\">redis</a> <a href=\"/tags.html#rsync\" class=\"post-tag\">rsync</a> <a href=\"/tags.html#docker\" class=\"post-tag\">docker</a> <a href=\"/tags.html#docker-compose\" class=\"post-tag\">docker-compose</a> </span><br><br>\n\n\n<p>Что делать в случае, когда тебе нужно захватить контроль над хостом, который находится в другой подсети? Верно — много запутанных туннелей! На примере виртуалки <strong>Reddish</strong> с Hack The Box мы встретимся со средой визуального программирования Node-RED, где в прямом смысле «построим» реверс-шелл, проэксплуатируем слабую конфигурацию СУБД Redis, воспользуемся инструментом зеркалирования файлов rsync для доступа к чужой файловой системе, а также создадим целое множество вредоносных задач cron всех сортов и расцветок. И что самое интересное — все управление хостом будет выполняться посредством маршрутизации трафика по докер-контейнерам через несколько TCP-туннелей. Погнали!</p>","link":"https://snovvcrash.rocks/2020/03/17/htb-reddish.html","retrieved":1737265073167},{"title":"HTB{ Granny💔Grandpa }","contents":"<span class=\"post-meta\">Jan 26, 2020</span>\n        <span class=\"post-meta\">• </span>\n        <span class=\"post-meta time\">22 minutes to read </span>\n        <h3 class=\"post-list-h3\">\n          <a class=\"post-link\" href=\"/2020/01/26/htb-grandparents.html\">\n            HTB{ Granny💔Grandpa }\n          </a>\n        </h3>\n\n  <span class=\"tag-list\"><a href=\"/tags.html#xakep-ru\" class=\"post-tag\">xakep-ru</a> <a href=\"/tags.html#hackmag-com\" class=\"post-tag\">hackmag-com</a> <a href=\"/tags.html#write-up\" class=\"post-tag\">write-up</a> <a href=\"/tags.html#hackthebox\" class=\"post-tag\">hackthebox</a> <a href=\"/tags.html#machine\" class=\"post-tag\">machine</a> <a href=\"/tags.html#windows\" class=\"post-tag\">windows</a> <a href=\"/tags.html#webdav\" class=\"post-tag\">webdav</a> <a href=\"/tags.html#davtest\" class=\"post-tag\">davtest</a> <a href=\"/tags.html#burp\" class=\"post-tag\">burp</a> <a href=\"/tags.html#msfvenom\" class=\"post-tag\">msfvenom</a> <a href=\"/tags.html#metasploit\" class=\"post-tag\">metasploit</a> <a href=\"/tags.html#upload-asp\" class=\"post-tag\">upload-asp</a> <a href=\"/tags.html#cve-2017-7269\" class=\"post-tag\">cve-2017-7269</a> <a href=\"/tags.html#scstoragepathfromurl\" class=\"post-tag\">scstoragepathfromurl</a> <a href=\"/tags.html#ms14-070\" class=\"post-tag\">ms14-070</a> <a href=\"/tags.html#tcpip-ioctl\" class=\"post-tag\">tcpip-ioctl</a> <a href=\"/tags.html#pivoting\" class=\"post-tag\">pivoting</a> <a href=\"/tags.html#port-forwarding\" class=\"post-tag\">port-forwarding</a> <a href=\"/tags.html#msf-route\" class=\"post-tag\">msf-route</a> <a href=\"/tags.html#msf-socks\" class=\"post-tag\">msf-socks</a> <a href=\"/tags.html#proxychains-ng\" class=\"post-tag\">proxychains-ng</a> <a href=\"/tags.html#ssh-reverse-tcp\" class=\"post-tag\">ssh-reverse-tcp</a> <a href=\"/tags.html#plink\" class=\"post-tag\">plink</a> <a href=\"/tags.html#msf-portfwd\" class=\"post-tag\">msf-portfwd</a> <a href=\"/tags.html#msf-hashdump\" class=\"post-tag\">msf-hashdump</a> <a href=\"/tags.html#lmhash-nthash\" class=\"post-tag\">lmhash-nthash</a> <a href=\"/tags.html#pass-the-hash\" class=\"post-tag\">pass-the-hash</a> <a href=\"/tags.html#impacket\" class=\"post-tag\">impacket</a> <a href=\"/tags.html#psexec-py\" class=\"post-tag\">psexec-py</a> </span><br><br>\n\n\n<p>На заре становления Hack The Box как онлайн-площадки для тренировки вайтхетов в списке машин ее лаборатории значились две виртуалки: <strong>Grandpa</strong> и <strong>Granny</strong>. Обе эти машины нацелены на эксплуатацию уязвимостей WebDAV (набора дополнений для HTTP), и стратегии захвата их root-флагов практически не отличаются друг от друга. Поэтому, чтобы разнообразить прохождения, мы сначала быстро рассмотрим, как можно взломать каждый из хостов по отдельности, а после этого превратим один из них в шлюз, через который атакуем второй хост. Умение пользоваться техникой Pivoting — проброса трафика к жертве (и обратно) через промежуточные хосты — жизненно важный скил для этичного хакера, который пригодится при тестировании на проникновение любой корпоративной сетки.</p>","link":"https://snovvcrash.rocks/2020/01/26/htb-grandparents.html","retrieved":1737265073168},{"title":"В королевстве PWN. Return-to-bss, криптооракулы и реверс-инжиниринг против Великого Сокрушителя","contents":"<span class=\"post-meta\">Dec 20, 2019</span>\n        <span class=\"post-meta\">• </span>\n        <span class=\"post-meta time\">43 minutes to read </span>\n        <h3 class=\"post-list-h3\">\n          <a class=\"post-link\" href=\"/2019/12/20/htb-smasher.html\">\n            В королевстве PWN. Return-to-bss, криптооракулы и реверс-инжиниринг против Великого Сокрушителя\n          </a>\n        </h3>\n\n  <span class=\"tag-list\"><a href=\"/tags.html#xakep-ru\" class=\"post-tag\">xakep-ru</a> <a href=\"/tags.html#write-up\" class=\"post-tag\">write-up</a> <a href=\"/tags.html#hackthebox\" class=\"post-tag\">hackthebox</a> <a href=\"/tags.html#machine\" class=\"post-tag\">machine</a> <a href=\"/tags.html#pwn-64\" class=\"post-tag\">pwn-64</a> <a href=\"/tags.html#linux\" class=\"post-tag\">linux</a> <a href=\"/tags.html#masscan\" class=\"post-tag\">masscan</a> <a href=\"/tags.html#tiny-web-server\" class=\"post-tag\">tiny-web-server</a> <a href=\"/tags.html#path-traversal\" class=\"post-tag\">path-traversal</a> <a href=\"/tags.html#wget-mirror\" class=\"post-tag\">wget-mirror</a> <a href=\"/tags.html#diff\" class=\"post-tag\">diff</a> <a href=\"/tags.html#code-analysis\" class=\"post-tag\">code-analysis</a> <a href=\"/tags.html#gdb-fork\" class=\"post-tag\">gdb-fork</a> <a href=\"/tags.html#python3-pwntools\" class=\"post-tag\">python3-pwntools</a> <a href=\"/tags.html#ret2shellcode\" class=\"post-tag\">ret2shellcode</a> <a href=\"/tags.html#ret2bss\" class=\"post-tag\">ret2bss</a> <a href=\"/tags.html#ssh-key-injection\" class=\"post-tag\">ssh-key-injection</a> <a href=\"/tags.html#linenum-sh\" class=\"post-tag\">linenum-sh</a> <a href=\"/tags.html#padding-oracle\" class=\"post-tag\">padding-oracle</a> <a href=\"/tags.html#aes-cbc\" class=\"post-tag\">aes-cbc</a> <a href=\"/tags.html#pkcs7\" class=\"post-tag\">pkcs7</a> <a href=\"/tags.html#binary-analysis\" class=\"post-tag\">binary-analysis</a> <a href=\"/tags.html#reverse\" class=\"post-tag\">reverse</a> <a href=\"/tags.html#race-condition\" class=\"post-tag\">race-condition</a> <a href=\"/tags.html#ghidra\" class=\"post-tag\">ghidra</a> <a href=\"/tags.html#cutter\" class=\"post-tag\">cutter</a> <a href=\"/tags.html#strace\" class=\"post-tag\">strace</a> <a href=\"/tags.html#binary-patching\" class=\"post-tag\">binary-patching</a> <a href=\"/tags.html#pvs-studio\" class=\"post-tag\">pvs-studio</a> </span><br><br>\n\n\n<p>Год близится к своему логическому завершению и подчищает свои хвосты, поэтому и я, последовав его примеру, закончу цикл «В королевстве PWN» разбором хардкорной тачки <strong>Smasher</strong> с Hack The Box. На этом пути нас ожидает: низкоуровневый сплоитинг веб-сервера со срывом стека (куда же без него?) и генерацией шелл-кода «на лету» с помощью древней магии pwntools; проведение атаки Padding Oracle на Python-приложение для вскрытия шифртекста AES-CBC (абьюзим логику логирования приложения и реализации добивания блоков PKCS#7); реверс-инжиниринг исполняемого файла с атрибутом SUID для повышения привилегий в системе до локального суперпользователя.</p>","link":"https://snovvcrash.rocks/2019/12/20/htb-smasher.html","retrieved":1737265073169},{"title":"В королевстве PWN. ROP-цепочки и атака Return-to-PLT в CTF Bitterman","contents":"<span class=\"post-meta\">Nov 23, 2019</span>\n        <span class=\"post-meta\">• </span>\n        <span class=\"post-meta time\">38 minutes to read </span>\n        <h3 class=\"post-list-h3\">\n          <a class=\"post-link\" href=\"/2019/11/23/bitterman.html\">\n            В королевстве PWN. ROP-цепочки и атака Return-to-PLT в CTF Bitterman\n          </a>\n        </h3>\n\n  <span class=\"tag-list\"><a href=\"/tags.html#xakep-ru\" class=\"post-tag\">xakep-ru</a> <a href=\"/tags.html#write-up\" class=\"post-tag\">write-up</a> <a href=\"/tags.html#ctf\" class=\"post-tag\">ctf</a> <a href=\"/tags.html#pwn-64\" class=\"post-tag\">pwn-64</a> <a href=\"/tags.html#linux\" class=\"post-tag\">linux</a> <a href=\"/tags.html#gdb-weaponize\" class=\"post-tag\">gdb-weaponize</a> <a href=\"/tags.html#buffer-overflow\" class=\"post-tag\">buffer-overflow</a> <a href=\"/tags.html#stack-smashing\" class=\"post-tag\">stack-smashing</a> <a href=\"/tags.html#getenvaddr\" class=\"post-tag\">getenvaddr</a> <a href=\"/tags.html#dep-bypass\" class=\"post-tag\">dep-bypass</a> <a href=\"/tags.html#ret2libc\" class=\"post-tag\">ret2libc</a> <a href=\"/tags.html#rop\" class=\"post-tag\">rop</a> <a href=\"/tags.html#rop-chain\" class=\"post-tag\">rop-chain</a> <a href=\"/tags.html#r2\" class=\"post-tag\">r2</a> <a href=\"/tags.html#ropgadget\" class=\"post-tag\">ROPgadget</a> <a href=\"/tags.html#ropper\" class=\"post-tag\">ropper</a> <a href=\"/tags.html#pwntools\" class=\"post-tag\">pwntools</a> <a href=\"/tags.html#aslr-bypass\" class=\"post-tag\">aslr-bypass</a> <a href=\"/tags.html#address-leak\" class=\"post-tag\">address-leak</a> <a href=\"/tags.html#got\" class=\"post-tag\">got</a> <a href=\"/tags.html#plt\" class=\"post-tag\">plt</a> <a href=\"/tags.html#ret2plt\" class=\"post-tag\">ret2plt</a> <a href=\"/tags.html#libc-database\" class=\"post-tag\">libc-database</a> <a href=\"/tags.html#ghidra\" class=\"post-tag\">ghidra</a> </span><br><br>\n\n\n<p>В этой статье мы поговорим об особенностях переполнения стека в 64-битном Linux. Начнем с прохождения трех обучающих кейсов для различных сценариев выполнения Stack Overflow в Ubuntu 19.10 x64. Далее на примере таска Bitterman, представленном на соревновании CAMP CTF 2015, используя возможности модуля pwntools, мы построим эксплоит, демонстрирующий техники Return-oriented programming для обмана запрета исполнения DEP/NX и Return-to-PLT для байпаса механизма рандомизации адресов ASLR без брутфорса.</p>","link":"https://snovvcrash.rocks/2019/11/23/bitterman.html","retrieved":1737265073171},{"title":"В королевстве PWN. Обходим DEP и брутфорсим ASLR в «Октябре»","contents":"<span class=\"post-meta\">Nov 8, 2019</span>\n        <span class=\"post-meta\">• </span>\n        <span class=\"post-meta time\">20 minutes to read </span>\n        <h3 class=\"post-list-h3\">\n          <a class=\"post-link\" href=\"/2019/11/08/htb-october.html\">\n            В королевстве PWN. Обходим DEP и брутфорсим ASLR в «Октябре»\n          </a>\n        </h3>\n\n  <span class=\"tag-list\"><a href=\"/tags.html#xakep-ru\" class=\"post-tag\">xakep-ru</a> <a href=\"/tags.html#write-up\" class=\"post-tag\">write-up</a> <a href=\"/tags.html#hackthebox\" class=\"post-tag\">hackthebox</a> <a href=\"/tags.html#machine\" class=\"post-tag\">machine</a> <a href=\"/tags.html#pwn-32\" class=\"post-tag\">pwn-32</a> <a href=\"/tags.html#linux\" class=\"post-tag\">linux</a> <a href=\"/tags.html#october-cms\" class=\"post-tag\">october-cms</a> <a href=\"/tags.html#default-credentials\" class=\"post-tag\">default-credentials</a> <a href=\"/tags.html#searchsploit\" class=\"post-tag\">searchsploit</a> <a href=\"/tags.html#php5-upload\" class=\"post-tag\">php5-upload</a> <a href=\"/tags.html#python-simple-http\" class=\"post-tag\">python-simple-http</a> <a href=\"/tags.html#suid-files\" class=\"post-tag\">suid-files</a> <a href=\"/tags.html#buffer-overflow\" class=\"post-tag\">buffer-overflow</a> <a href=\"/tags.html#stack-smashing\" class=\"post-tag\">stack-smashing</a> <a href=\"/tags.html#dep-bypass\" class=\"post-tag\">dep-bypass</a> <a href=\"/tags.html#ret2libc\" class=\"post-tag\">ret2libc</a> <a href=\"/tags.html#aslr-bypass\" class=\"post-tag\">aslr-bypass</a> <a href=\"/tags.html#aslr-bruteforce\" class=\"post-tag\">aslr-bruteforce</a> </span><br><br>\n\n\n<p><strong>October</strong> — относительно несложная виртуальная машина с Hack The Box, однако на ее примере удобнее всего разобрать, что, в сущности, из себя представляют: атака ret2libc, применяемая для обхода запрета выполнения данных (DEP/NX-Bit) в стеке; и подбор необходимого адреса той самой стандартной разделяемой библиотеки libc для нивелирования рандомизации размещения адресного пространства (ASLR). Ко всему прочему, на общий уровень сложности повлиял челлендж с захватом админки CMS, где случайно оставили дефолтную авторизацию, поэтому быстро пробежим вступление и более подробно остановимся на этапе privilege escalation.</p>","link":"https://snovvcrash.rocks/2019/11/08/htb-october.html","retrieved":1737265073174},{"title":"В королевстве PWN. Препарируем классику переполнения стека","contents":"<span class=\"post-meta\">Oct 20, 2019</span>\n        <span class=\"post-meta\">• </span>\n        <span class=\"post-meta time\">35 minutes to read </span>\n        <h3 class=\"post-list-h3\">\n          <a class=\"post-link\" href=\"/2019/10/20/classic-stack-overflow.html\">\n            В королевстве PWN. Препарируем классику переполнения стека\n          </a>\n        </h3>\n\n  <span class=\"tag-list\"><a href=\"/tags.html#xakep-ru\" class=\"post-tag\">xakep-ru</a> <a href=\"/tags.html#hackmag-com\" class=\"post-tag\">hackmag-com</a> <a href=\"/tags.html#tutorial\" class=\"post-tag\">tutorial</a> <a href=\"/tags.html#pwn-32\" class=\"post-tag\">pwn-32</a> <a href=\"/tags.html#linux\" class=\"post-tag\">linux</a> <a href=\"/tags.html#buffer-overflow\" class=\"post-tag\">buffer-overflow</a> <a href=\"/tags.html#stack-smashing\" class=\"post-tag\">stack-smashing</a> <a href=\"/tags.html#gcc-flags\" class=\"post-tag\">gcc-flags</a> <a href=\"/tags.html#asm\" class=\"post-tag\">asm</a> <a href=\"/tags.html#objdump\" class=\"post-tag\">objdump</a> <a href=\"/tags.html#gdb\" class=\"post-tag\">gdb</a> <a href=\"/tags.html#peda\" class=\"post-tag\">peda</a> <a href=\"/tags.html#checksec\" class=\"post-tag\">checksec</a> <a href=\"/tags.html#eip-overwrite\" class=\"post-tag\">eip-overwrite</a> <a href=\"/tags.html#shellcode\" class=\"post-tag\">shellcode</a> <a href=\"/tags.html#msfvenom\" class=\"post-tag\">msfvenom</a> <a href=\"/tags.html#apport\" class=\"post-tag\">apport</a> <a href=\"/tags.html#core-dump\" class=\"post-tag\">core-dump</a> <a href=\"/tags.html#stack-boundary\" class=\"post-tag\">stack-boundary</a> </span><br><br>\n\n\n<p>Сколько раз и в каких только контекстах уже не писали об уязвимости переполнения стека. Однако в этой статье я постараюсь предоставить универсальное практическое вступление для энтузиастов, начинающих погружение в Low-Level эксплуатацию, и на примере того самого переполнения рассмотрю широкий спектр тем: от существующих на данный момент механизмов безопасности компилятора gcc до точеных особенностей разработки бинарных эксплоитов для срыва стека. Могу поспорить, что со школьной скамьи тебе твердили, что strcpy — это такая небезопасная функция, использование которой чревато попаданию в неблагоприятную ситуацию — выход за границы доступной памяти, и «вообще лучше используй MS Visual Studio…». Почему эта функция небезопасна? Что может произойти, если ее использовать? Как эксплуатировать уязвимости семейства Stacked Based Buffer Overflow? Ответы на эти вопросы я и дам далее.</p>","link":"https://snovvcrash.rocks/2019/10/20/classic-stack-overflow.html","retrieved":1737265073176},{"title":"HTB{ CTF }","contents":"<span class=\"post-meta\">Sep 20, 2019</span>\n        <span class=\"post-meta\">• </span>\n        <span class=\"post-meta time\">33 minutes to read </span>\n        <h3 class=\"post-list-h3\">\n          <a class=\"post-link\" href=\"/2019/09/20/htb-ctf.html\">\n            HTB{ CTF }\n          </a>\n        </h3>\n\n  <span class=\"tag-list\"><a href=\"/tags.html#xakep-ru\" class=\"post-tag\">xakep-ru</a> <a href=\"/tags.html#hackmag-com\" class=\"post-tag\">hackmag-com</a> <a href=\"/tags.html#write-up\" class=\"post-tag\">write-up</a> <a href=\"/tags.html#hackthebox\" class=\"post-tag\">hackthebox</a> <a href=\"/tags.html#machine\" class=\"post-tag\">machine</a> <a href=\"/tags.html#linux\" class=\"post-tag\">linux</a> <a href=\"/tags.html#ldap\" class=\"post-tag\">ldap</a> <a href=\"/tags.html#ldap-injection\" class=\"post-tag\">ldap-injection</a> <a href=\"/tags.html#wfuzz\" class=\"post-tag\">wfuzz</a> <a href=\"/tags.html#double-encoding\" class=\"post-tag\">double-encoding</a> <a href=\"/tags.html#stoken\" class=\"post-tag\">stoken</a> <a href=\"/tags.html#otp\" class=\"post-tag\">otp</a> <a href=\"/tags.html#7z\" class=\"post-tag\">7z</a> <a href=\"/tags.html#fwdsh3ll\" class=\"post-tag\">FwdSh3ll</a> </span><br><br>\n\n\n<p><strong>CTF</strong> — просто идеальная машина для составления райтапа: она достаточна прямолинейна, здесь ты не встретишь множества развилок на пути, ведущих в никуда, от которых становится неинтересным следить за ходом повестования, а мне не придется лишний раз выкручиваться, чтобы придумать, какими словами лучше описать свой ход мыслей при ее прохождении для сохранения интриги. В то же время, эта виртуалка весьма сложна, что в совокупности со своей прямолинейностью делает ее максимально интересной для <strike>взлома</strike> тестирования на проникновение. По мере продвижения к победному флагу нам предстоит: поиграть с stoken — софтверным решением для Linux для генерации одноразовых паролей (RSA SecurID токенов); разобраться с множественными типами LDAP-инъекций (Blind, Second Order); написать несколько скриптов на Python для брута LDAP-каталога; злоупотребить функционалом архиватора 7z, в частности его опцией @listfiles, для чтения файлов с правами суперпользователя.</p>","link":"https://snovvcrash.rocks/2019/09/20/htb-ctf.html","retrieved":1737265073183},{"title":"HTB{ SecNotes }","contents":"<span class=\"post-meta\">Apr 5, 2019</span>\n        <span class=\"post-meta\">• </span>\n        <span class=\"post-meta time\">21 minutes to read </span>\n        <h3 class=\"post-list-h3\">\n          <a class=\"post-link\" href=\"/2019/04/05/htb-secnotes.html\">\n            HTB{ SecNotes }\n          </a>\n        </h3>\n\n  <span class=\"tag-list\"><a href=\"/tags.html#write-up\" class=\"post-tag\">write-up</a> <a href=\"/tags.html#hackthebox\" class=\"post-tag\">hackthebox</a> <a href=\"/tags.html#machine\" class=\"post-tag\">machine</a> <a href=\"/tags.html#linux\" class=\"post-tag\">linux</a> <a href=\"/tags.html#xsrf\" class=\"post-tag\">xsrf</a> <a href=\"/tags.html#second-order-sqli\" class=\"post-tag\">second-order-sqli</a> <a href=\"/tags.html#smb\" class=\"post-tag\">smb</a> <a href=\"/tags.html#web-shell\" class=\"post-tag\">web-shell</a> <a href=\"/tags.html#reverse-shell\" class=\"post-tag\">reverse-shell</a> <a href=\"/tags.html#wsl\" class=\"post-tag\">wsl</a> <a href=\"/tags.html#lxss\" class=\"post-tag\">lxss</a> <a href=\"/tags.html#bash-exe\" class=\"post-tag\">bash-exe</a> <a href=\"/tags.html#impacket\" class=\"post-tag\">impacket</a> </span><br><br>\n\n<p><strong>SecNotes</strong> — нетрудная машина под Windows с вариативным начальным этапом и оригинальным заключительным PrivEsc’ом. Для того, чтобы добраться до пользовательской SMB-шары (откуда ты сможешь использовать RCE через залитый веб-шелл), сперва предстоит получить доступ к аккаунту админа веб-приложения. Сделать это можно двумя способами: либо XSRF (путь, задуманный автором коробки), либо SQL-инъекция второго порядка (то, что автор не доглядел). Если же захочешь добраться до root’а, то тебе предложат взаимодействие с подсистемой Linux (WSL) с целью вытащить креды от админской SMB, а далее psexec/winexec для инициализации полноценной сессии суперпользователя. Удачи, мой друг!</p>","link":"https://snovvcrash.rocks/2019/04/05/htb-secnotes.html","retrieved":1737265073183},{"title":"HTB{ Mischief }","contents":"<span class=\"post-meta\">Apr 5, 2019</span>\n        <span class=\"post-meta\">• </span>\n        <span class=\"post-meta time\">36 minutes to read </span>\n        <h3 class=\"post-list-h3\">\n          <a class=\"post-link\" href=\"/2019/04/05/htb-mischief.html\">\n            HTB{ Mischief }\n          </a>\n        </h3>\n\n  <span class=\"tag-list\"><a href=\"/tags.html#xakep-ru\" class=\"post-tag\">xakep-ru</a> <a href=\"/tags.html#hackmag-com\" class=\"post-tag\">hackmag-com</a> <a href=\"/tags.html#write-up\" class=\"post-tag\">write-up</a> <a href=\"/tags.html#hackthebox\" class=\"post-tag\">hackthebox</a> <a href=\"/tags.html#machine\" class=\"post-tag\">machine</a> <a href=\"/tags.html#linux\" class=\"post-tag\">linux</a> <a href=\"/tags.html#snmp\" class=\"post-tag\">snmp</a> <a href=\"/tags.html#snmpwalk\" class=\"post-tag\">snmpwalk</a> <a href=\"/tags.html#snmp-check\" class=\"post-tag\">snmp-check</a> <a href=\"/tags.html#onesixtyone\" class=\"post-tag\">onesixtyone</a> <a href=\"/tags.html#enyx-py\" class=\"post-tag\">enyx-py</a> <a href=\"/tags.html#python-server\" class=\"post-tag\">python-server</a> <a href=\"/tags.html#ipv6\" class=\"post-tag\">ipv6</a> <a href=\"/tags.html#iptables\" class=\"post-tag\">iptables</a> <a href=\"/tags.html#ip6tables\" class=\"post-tag\">ip6tables</a> <a href=\"/tags.html#eui-64\" class=\"post-tag\">eui-64</a> <a href=\"/tags.html#hydra\" class=\"post-tag\">hydra</a> <a href=\"/tags.html#command-injection\" class=\"post-tag\">command-injection</a> <a href=\"/tags.html#reverse-shell\" class=\"post-tag\">reverse-shell</a> <a href=\"/tags.html#acl\" class=\"post-tag\">acl</a> <a href=\"/tags.html#getfacl\" class=\"post-tag\">getfacl</a> <a href=\"/tags.html#bash-history\" class=\"post-tag\">bash_history</a> <a href=\"/tags.html#ping-pattern\" class=\"post-tag\">ping-pattern</a> <a href=\"/tags.html#icmp-shell\" class=\"post-tag\">icmp-shell</a> <a href=\"/tags.html#scapy\" class=\"post-tag\">scapy</a> <a href=\"/tags.html#systemd-run\" class=\"post-tag\">systemd-run</a> <a href=\"/tags.html#lxc\" class=\"post-tag\">lxc</a> </span><br><br>\n\n\n<p><strong>Mischief</strong> — на момент прохождения моя любимая Linux-тачка на HTB. Балансируя на уровне сложности где-то между “Medium” и “Hard” (хотя изначальный рейтинг был определен как “Insane”), эта виртуалка дает простор для творчества. Полагаю, если бы не некоторые ошибки автора (которые мы, конечно же, обсудим ниже), эта машина и правда была бы “безумной”. Итак, с чем предстоит повоевать: энумерация SNMP с последующим извлечением авторизационных данных из аргументов командной строки для простого Python-сервера (пробуем разные тулзы, в том числе snmpwalk, snmp-check, onesixtyone, enyx.py), получение IPv6-адреса машины из того же вывода SNMP (1-й способ), либо через pivoting другого хоста на HTB из MAC-адреса последнего (2-й способ, алгоритм EUI-64), обход фильтра для возможности инъекции команд (+ создание мини ICMP-шелла с помощью scapy на сладкое) и захват кредов пользователя; наконец, получение IPv6 реверс-шелла в обход iptables для запуска su от имени www-data (так как пользователя блокирует механизм распределения прав доступа ACL) и получения root-сессии с кредами из .bash_history.</p>","link":"https://snovvcrash.rocks/2019/04/05/htb-mischief.html","retrieved":1737265073184},{"title":"HTB{ Waldo }","contents":"<span class=\"post-meta\">Dec 29, 2018</span>\n        <span class=\"post-meta\">• </span>\n        <span class=\"post-meta time\">20 minutes to read </span>\n        <h3 class=\"post-list-h3\">\n          <a class=\"post-link\" href=\"/2018/12/29/htb-waldo.html\">\n            HTB{ Waldo }\n          </a>\n        </h3>\n\n  <span class=\"tag-list\"><a href=\"/tags.html#write-up\" class=\"post-tag\">write-up</a> <a href=\"/tags.html#hackthebox\" class=\"post-tag\">hackthebox</a> <a href=\"/tags.html#machine\" class=\"post-tag\">machine</a> <a href=\"/tags.html#linux\" class=\"post-tag\">linux</a> <a href=\"/tags.html#path-traversal\" class=\"post-tag\">path-traversal</a> <a href=\"/tags.html#lfi\" class=\"post-tag\">lfi</a> <a href=\"/tags.html#jq\" class=\"post-tag\">jq</a> <a href=\"/tags.html#docker\" class=\"post-tag\">docker</a> <a href=\"/tags.html#restricted-shell\" class=\"post-tag\">restricted-shell</a> <a href=\"/tags.html#rbash\" class=\"post-tag\">rbash</a> <a href=\"/tags.html#capabilities\" class=\"post-tag\">capabilities</a> <a href=\"/tags.html#bashrc\" class=\"post-tag\">bashrc</a> </span><br><br>\n\n<p><strong>Waldo</strong> — несложная Linux-коробка, внутри которой затерялся злосчастный Вальдо. Неотъемлемой частью процедуры поиска последнего станут такие развлечения, как эксплуатация уязвимого к атаке типа “Path Traversal + LFI” веб-приложения, таинственная маршрутизация в docker-контейнер при подключении к Waldo по SSH, обнаружение альтернативного SSH-ключа и подключение к реальной виртуальной машине с помощью оного, побег из restricted-shell’а (rbash) и, на сладкое, чтение файлов с правами root через абьюзинг утилиты с установленным мандатом CAP_DAC_READ_SEARCH из арсенала одного из механизмов управления доступом в Линукс — Linux Capabilities. Итак, где же Вальдо?</p>","link":"https://snovvcrash.rocks/2018/12/29/htb-waldo.html","retrieved":1737265073184},{"title":"HTB{ Active }","contents":"<span class=\"post-meta\">Dec 17, 2018</span>\n        <span class=\"post-meta\">• </span>\n        <span class=\"post-meta time\">24 minutes to read </span>\n        <h3 class=\"post-list-h3\">\n          <a class=\"post-link\" href=\"/2018/12/17/htb-active.html\">\n            HTB{ Active }\n          </a>\n        </h3>\n\n  <span class=\"tag-list\"><a href=\"/tags.html#xakep-ru\" class=\"post-tag\">xakep-ru</a> <a href=\"/tags.html#hackmag-com\" class=\"post-tag\">hackmag-com</a> <a href=\"/tags.html#write-up\" class=\"post-tag\">write-up</a> <a href=\"/tags.html#hackthebox\" class=\"post-tag\">hackthebox</a> <a href=\"/tags.html#machine\" class=\"post-tag\">machine</a> <a href=\"/tags.html#windows\" class=\"post-tag\">windows</a> <a href=\"/tags.html#directory\" class=\"post-tag\">directory</a> <a href=\"/tags.html#smb\" class=\"post-tag\">smb</a> <a href=\"/tags.html#smbclient\" class=\"post-tag\">smbclient</a> <a href=\"/tags.html#smbmap\" class=\"post-tag\">smbmap</a> <a href=\"/tags.html#enum4linux\" class=\"post-tag\">enum4linux</a> <a href=\"/tags.html#nullinux\" class=\"post-tag\">nullinux</a> <a href=\"/tags.html#gpp\" class=\"post-tag\">gpp</a> <a href=\"/tags.html#gpp-decrypt\" class=\"post-tag\">gpp-decrypt</a> <a href=\"/tags.html#kerberos\" class=\"post-tag\">kerberos</a> <a href=\"/tags.html#kerberoasting\" class=\"post-tag\">kerberoasting</a> <a href=\"/tags.html#impacket\" class=\"post-tag\">impacket</a> <a href=\"/tags.html#hashcat\" class=\"post-tag\">hashcat</a> </span><br><br>\n\n\n<p><strong>Active</strong> — максимально простая, однако, в то же время, одна из самых полезных для прохождения Windows-машин в своей “ценовой категории” на HTB. Почему? Так это же контроллер домена AD! Тезисный обзор предлагаемых развлечений: энумерация SMB-шар (используем tуеву hучу крутых утилит а-ля smbclient, smbmap, enum4linux, nullinux); разграбление SMB с анонимным доступом для захвата файла групповых политик Groups.xml; декрипт GPP-пароля из той самой xml’ки; получение доступа к внутридоменному аккаунту с последующей инициализацией атаки типа Kerberoasting (против протокола аутентификации Kerberos) для извлечения тикета администратора с помощью коллекции Python-скриптов impacket для работы с сетевыми протоколами; наконец, офлайн-восстановление пароля администратора из хеша (с помощью Hashcat) для окончательного pwn’а контроллера.</p>","link":"https://snovvcrash.rocks/2018/12/17/htb-active.html","retrieved":1737265073184},{"title":"HTB{ Hawk }","contents":"<span class=\"post-meta\">Dec 9, 2018</span>\n        <span class=\"post-meta\">• </span>\n        <span class=\"post-meta time\">14 minutes to read </span>\n        <h3 class=\"post-list-h3\">\n          <a class=\"post-link\" href=\"/2018/12/09/htb-hawk.html\">\n            HTB{ Hawk }\n          </a>\n        </h3>\n\n  <span class=\"tag-list\"><a href=\"/tags.html#write-up\" class=\"post-tag\">write-up</a> <a href=\"/tags.html#hackthebox\" class=\"post-tag\">hackthebox</a> <a href=\"/tags.html#machine\" class=\"post-tag\">machine</a> <a href=\"/tags.html#linux\" class=\"post-tag\">linux</a> <a href=\"/tags.html#ftp\" class=\"post-tag\">ftp</a> <a href=\"/tags.html#openssl\" class=\"post-tag\">openssl</a> <a href=\"/tags.html#drupal\" class=\"post-tag\">drupal</a> <a href=\"/tags.html#php\" class=\"post-tag\">php</a> <a href=\"/tags.html#php-filter\" class=\"post-tag\">php-filter</a> <a href=\"/tags.html#credentials-reuse\" class=\"post-tag\">credentials-reuse</a> <a href=\"/tags.html#ssh-tunneling\" class=\"post-tag\">ssh-tunneling</a> <a href=\"/tags.html#h2\" class=\"post-tag\">h2</a> </span><br><br>\n\n<p><strong>Hawk</strong> — “разнообразная” виртуалка на Linux, предлагающая целый спектр задач из самых разных областей: здесь тебе и подбор пароля для OpenSSL-шифрованного сообщения, и использование модуля “PHP Filter” в CMS Drupal для выполнения произвольного PHP-кода (и получения reverse-shell’а), и выявление проблемы повторного использования паролей. Последняя приведет к получению доступа к SSH и СУБД H2: будем пробрасывать SSH-туннель, чтобы подключиться к базе данных и выполнить системные команды через абьюзинг функционала CREATE ALIAS от имени суперпользователя. Вначале прочитаем флаг, а затем получим полноценный шелл, и таким образом повысим привилегия в системе.</p>","link":"https://snovvcrash.rocks/2018/12/09/htb-hawk.html","retrieved":1737265073184},{"title":"HTB{ Jerry }","contents":"<span class=\"post-meta\">Nov 20, 2018</span>\n        <span class=\"post-meta\">• </span>\n        <span class=\"post-meta time\">14 minutes to read </span>\n        <h3 class=\"post-list-h3\">\n          <a class=\"post-link\" href=\"/2018/11/20/htb-jerry.html\">\n            HTB{ Jerry }\n          </a>\n        </h3>\n\n  <span class=\"tag-list\"><a href=\"/tags.html#write-up\" class=\"post-tag\">write-up</a> <a href=\"/tags.html#hackthebox\" class=\"post-tag\">hackthebox</a> <a href=\"/tags.html#machine\" class=\"post-tag\">machine</a> <a href=\"/tags.html#windows\" class=\"post-tag\">windows</a> <a href=\"/tags.html#apache\" class=\"post-tag\">apache</a> <a href=\"/tags.html#apache-tomcat\" class=\"post-tag\">apache-tomcat</a> <a href=\"/tags.html#default-password\" class=\"post-tag\">default-password</a> <a href=\"/tags.html#war\" class=\"post-tag\">war</a> <a href=\"/tags.html#java\" class=\"post-tag\">java</a> <a href=\"/tags.html#reverse-shell\" class=\"post-tag\">reverse-shell</a> </span><br><br>\n\n<p><strong>Jerry</strong> — самая простая коробка под управлением Windows, с которой мне довелось столкнуться на просторах HTB. Первая кровь была пролита всего через 6 минут после того, как машина вышла в онлайн. В рамках прохождения нам предстоит сразиться с веб-сервером Apache Tomcat, на котором оставили стандартный пароль для менеджера приложений, собрать вредоносный WAR-файл, содержащий полезную нагрузку в виде reverse-shell’а, развернуть его на жертве и, собственно, получить сессию администратора. В дополнение в конце поста мы расковыряем тот самый файл.war и посмотрим, что за магия творится внутри. Всегда было жалко Тома, ненавижу эту мышь…</p>","link":"https://snovvcrash.rocks/2018/11/20/htb-jerry.html","retrieved":1737265073186},{"title":"HTB{ Bounty }","contents":"<span class=\"post-meta\">Nov 10, 2018</span>\n        <span class=\"post-meta\">• </span>\n        <span class=\"post-meta time\">16 minutes to read </span>\n        <h3 class=\"post-list-h3\">\n          <a class=\"post-link\" href=\"/2018/11/10/htb-bounty.html\">\n            HTB{ Bounty }\n          </a>\n        </h3>\n\n  <span class=\"tag-list\"><a href=\"/tags.html#write-up\" class=\"post-tag\">write-up</a> <a href=\"/tags.html#hackthebox\" class=\"post-tag\">hackthebox</a> <a href=\"/tags.html#machine\" class=\"post-tag\">machine</a> <a href=\"/tags.html#windows\" class=\"post-tag\">windows</a> <a href=\"/tags.html#iis\" class=\"post-tag\">iis</a> <a href=\"/tags.html#asp-net\" class=\"post-tag\">asp-net</a> <a href=\"/tags.html#web-config\" class=\"post-tag\">web-config</a> <a href=\"/tags.html#unicorn\" class=\"post-tag\">unicorn</a> <a href=\"/tags.html#metasploit\" class=\"post-tag\">metasploit</a> <a href=\"/tags.html#ms10-092\" class=\"post-tag\">ms10-092</a> <a href=\"/tags.html#stuxnet\" class=\"post-tag\">stuxnet</a> <a href=\"/tags.html#juicy-potato\" class=\"post-tag\">juicy-potato</a> </span><br><br>\n\n<p><strong>Bounty</strong> — очень простая Windows-машина с 1000 и одним способом PrivEsc’а до админа. Выполнив инъекцию ASP-кода в файл конфигурации web.config веб-сервера IIS, мы получим юзера, а дальше все зависит только от твоего воображения. В рамках этого райтапа будем использовать Metasploit в качестве основного инструмента сбора сведений о локальных уязвимостях и постэксплуатации оных, однако напоследок я приведу список альтернативного ПО, которое с таким же успехом позволит выпотрошить эту тачку.</p>","link":"https://snovvcrash.rocks/2018/11/10/htb-bounty.html","retrieved":1737265073187},{"title":"HTB{ TartarSauce }","contents":"<span class=\"post-meta\">Nov 2, 2018</span>\n        <span class=\"post-meta\">• </span>\n        <span class=\"post-meta time\">26 minutes to read </span>\n        <h3 class=\"post-list-h3\">\n          <a class=\"post-link\" href=\"/2018/11/02/htb-tartarsauce.html\">\n            HTB{ TartarSauce }\n          </a>\n        </h3>\n\n  <span class=\"tag-list\"><a href=\"/tags.html#write-up\" class=\"post-tag\">write-up</a> <a href=\"/tags.html#hackthebox\" class=\"post-tag\">hackthebox</a> <a href=\"/tags.html#machine\" class=\"post-tag\">machine</a> <a href=\"/tags.html#linux\" class=\"post-tag\">linux</a> <a href=\"/tags.html#monstra-cms\" class=\"post-tag\">monstra-cms</a> <a href=\"/tags.html#wordpress\" class=\"post-tag\">wordpress</a> <a href=\"/tags.html#wpscan\" class=\"post-tag\">wpscan</a> <a href=\"/tags.html#rfi\" class=\"post-tag\">rfi</a> <a href=\"/tags.html#tar\" class=\"post-tag\">tar</a> <a href=\"/tags.html#code-analysis\" class=\"post-tag\">code-analysis</a> <a href=\"/tags.html#bash\" class=\"post-tag\">bash</a> </span><br><br>\n\n<p><strong>TartarSauce</strong> — весьма нетривиальная Linux-тачка, которая не прочь тебя подурачить. Преодолев огромное количество rabbit-hole’ов, мы столкнемся с: RFI-уязвимостью в устаревшем плагине для WordPress (входная точка в систему) и эксплуатацией некоторых особенностей поведения утилиты tar для обоих PrivEsc’ов. Для повышения привилегий до пользователя будем абьюзить флаги –to-command / –use-compress-program / –checkpoint-action; для инициализации же сессии суперпользователя придется разреверсить bash-скрипт и, воспользовавшись тем фактом, что tar “помнит” владельцев упакованных файлов, скрафтить и запустить SUID-шелл. Также возможен более лайтовый вариант прочтения root-флага, не требующий получения полноценного шелла: здесь будут продемонстрированы некоторые фишки утилиты diff. Это будет длинный райтап…</p>","link":"https://snovvcrash.rocks/2018/11/02/htb-tartarsauce.html","retrieved":1737265073190},{"title":"HTB{ DevOops }","contents":"<span class=\"post-meta\">Oct 22, 2018</span>\n        <span class=\"post-meta\">• </span>\n        <span class=\"post-meta time\">22 minutes to read </span>\n        <h3 class=\"post-list-h3\">\n          <a class=\"post-link\" href=\"/2018/10/22/htb-devoops.html\">\n            HTB{ DevOops }\n          </a>\n        </h3>\n\n  <span class=\"tag-list\"><a href=\"/tags.html#write-up\" class=\"post-tag\">write-up</a> <a href=\"/tags.html#hackthebox\" class=\"post-tag\">hackthebox</a> <a href=\"/tags.html#machine\" class=\"post-tag\">machine</a> <a href=\"/tags.html#linux\" class=\"post-tag\">linux</a> <a href=\"/tags.html#xxe\" class=\"post-tag\">xxe</a> <a href=\"/tags.html#xml-entity-injection\" class=\"post-tag\">xml-entity-injection</a> <a href=\"/tags.html#code-analysis\" class=\"post-tag\">code-analysis</a> <a href=\"/tags.html#python\" class=\"post-tag\">python</a> <a href=\"/tags.html#deserialization\" class=\"post-tag\">deserialization</a> <a href=\"/tags.html#pickle\" class=\"post-tag\">pickle</a> <a href=\"/tags.html#reverse-shell\" class=\"post-tag\">reverse-shell</a> <a href=\"/tags.html#git\" class=\"post-tag\">git</a> </span><br><br>\n\n<p><strong>DevOops</strong> — ненапряжная виртуалка под Linux’ом, уязвимая для XML-инъекций (XXE). В данном случае эта атака открывает 2 основных вектора проникновения внутрь системы: тривиальный (просто забрать ssh-ключ из домашней директории; кстати, этот способ — невнимательность создателя машины) и более каноничный, который задумывался как основной (десериализация вредоносной python-нагрузки). Внутри машины все будет совсем просто: для PrivEsc’а достаточно заглянуть в историю git-коммитов репозитория с исходниками блога, который крутится на вебе. По традиции охватим оба способа и накодим немного скриптов для автоматизации pwn’а на питончике. Gonna be fun!</p>","link":"https://snovvcrash.rocks/2018/10/22/htb-devoops.html","retrieved":1737265073192},{"title":"Об HTTP-серверах для трансфера файлов в Linux","contents":"<span class=\"post-meta\">Oct 11, 2018</span>\n        <span class=\"post-meta\">• </span>\n        <span class=\"post-meta time\">5 minutes to read </span>\n        <h3 class=\"post-list-h3\">\n          <a class=\"post-link\" href=\"/2018/10/11/simple-http-servers.html\">\n            Об HTTP-серверах для трансфера файлов в Linux\n          </a>\n        </h3>\n\n  <span class=\"tag-list\"><a href=\"/tags.html#notes\" class=\"post-tag\">notes</a> <a href=\"/tags.html#linux\" class=\"post-tag\">linux</a> <a href=\"/tags.html#file-transfer\" class=\"post-tag\">file-transfer</a> <a href=\"/tags.html#http-server\" class=\"post-tag\">http-server</a> <a href=\"/tags.html#python-server\" class=\"post-tag\">python-server</a> <a href=\"/tags.html#php-server\" class=\"post-tag\">php-server</a> <a href=\"/tags.html#nginx\" class=\"post-tag\">nginx</a> </span><br><br>\n\n<p>Последнее время часто сталкивался с необходимостью обмена файлами между Linux-машинами. В этом посте опишу 3 удобных способа, как можно быстро и легко развернуть тривиальный HTTP-сервер для трансфера файлов.</p>","link":"https://snovvcrash.rocks/2018/10/11/simple-http-servers.html","retrieved":1737265073193},{"title":"HTB{ Sunday }","contents":"<span class=\"post-meta\">Oct 9, 2018</span>\n        <span class=\"post-meta\">• </span>\n        <span class=\"post-meta time\">23 minutes to read </span>\n        <h3 class=\"post-list-h3\">\n          <a class=\"post-link\" href=\"/2018/10/09/htb-sunday.html\">\n            HTB{ Sunday }\n          </a>\n        </h3>\n\n  <span class=\"tag-list\"><a href=\"/tags.html#write-up\" class=\"post-tag\">write-up</a> <a href=\"/tags.html#hackthebox\" class=\"post-tag\">hackthebox</a> <a href=\"/tags.html#machine\" class=\"post-tag\">machine</a> <a href=\"/tags.html#solaris\" class=\"post-tag\">solaris</a> <a href=\"/tags.html#finger\" class=\"post-tag\">finger</a> <a href=\"/tags.html#brute-force\" class=\"post-tag\">brute-force</a> <a href=\"/tags.html#patator\" class=\"post-tag\">patator</a> <a href=\"/tags.html#shadow\" class=\"post-tag\">shadow</a> <a href=\"/tags.html#john\" class=\"post-tag\">john</a> <a href=\"/tags.html#wget\" class=\"post-tag\">wget</a> <a href=\"/tags.html#sudoers\" class=\"post-tag\">sudoers</a> </span><br><br>\n\n<p><strong>Sunday</strong> — простая машина на основе ОС Solaris. В ассортименте: древний net-протокол Finger для получения информации о залогиненных пользователях в качестве входной точки, брутфорс SSH-кредов, восстановление пароля соседнего пользователя по хешу (просим помощи у Джона) для первого PrivEsc’а и целая уйма способов получения рут-сессии через эксплуатацию wget для второго PrivEsc’а (попробуем все). Несмотря на то, что это правда одна из самых нетрудных тачек на HTB, большинство людей выбирали модификацию shadow/sudoers -файлов в качестве финального повышения привилегий, откуда непрекращающиеся сбои, ресеты и туча головной боли для вежливых хакеров. Рассмотрим же вместе этот временами бесящий, но от этого не менее веселый путь к победе над Sunday.</p>","link":"https://snovvcrash.rocks/2018/10/09/htb-sunday.html","retrieved":1737265073194},{"title":"HTB{ Olympus }","contents":"<span class=\"post-meta\">Oct 3, 2018</span>\n        <span class=\"post-meta\">• </span>\n        <span class=\"post-meta time\">21 minutes to read </span>\n        <h3 class=\"post-list-h3\">\n          <a class=\"post-link\" href=\"/2018/10/03/htb-olympus.html\">\n            HTB{ Olympus }\n          </a>\n        </h3>\n\n  <span class=\"tag-list\"><a href=\"/tags.html#write-up\" class=\"post-tag\">write-up</a> <a href=\"/tags.html#hackthebox\" class=\"post-tag\">hackthebox</a> <a href=\"/tags.html#machine\" class=\"post-tag\">machine</a> <a href=\"/tags.html#linux\" class=\"post-tag\">linux</a> <a href=\"/tags.html#nikto\" class=\"post-tag\">nikto</a> <a href=\"/tags.html#xdebug\" class=\"post-tag\">xdebug</a> <a href=\"/tags.html#reverse-shell\" class=\"post-tag\">reverse-shell</a> <a href=\"/tags.html#aircrack-ng\" class=\"post-tag\">aircrack-ng</a> <a href=\"/tags.html#airgeddon\" class=\"post-tag\">airgeddon</a> <a href=\"/tags.html#dns-zone-transfer\" class=\"post-tag\">dns-zone-transfer</a> <a href=\"/tags.html#dns-axfr\" class=\"post-tag\">dns-axfr</a> <a href=\"/tags.html#port-knocking\" class=\"post-tag\">port-knocking</a> <a href=\"/tags.html#docker\" class=\"post-tag\">docker</a> <a href=\"/tags.html#metasploit\" class=\"post-tag\">metasploit</a> </span><br><br>\n\n<p>Путешествие к вершинам <strong>Олимпа</strong>: 1. Остров Крит — веб-сервер Apache с RCE-уязвимостью в Xdebug; 2. Олимпия — докер-контейнер с таском на брут 802.11 WPA перехвата; 3. Остров Родос — DNS-сервер, хранящий последовательность портов к Port Knocking’у для открытия портала в царство Аида; 4. Царство Аида — последний этап, сама виртуальная машина Olympus, root-сессия будет получена через захват docker’а. А теперь подробнее…</p>","link":"https://snovvcrash.rocks/2018/10/03/htb-olympus.html","retrieved":1737265073196},{"title":"HTB{ Canape }","contents":"<span class=\"post-meta\">Sep 28, 2018</span>\n        <span class=\"post-meta\">• </span>\n        <span class=\"post-meta time\">25 minutes to read </span>\n        <h3 class=\"post-list-h3\">\n          <a class=\"post-link\" href=\"/2018/09/28/htb-canape.html\">\n            HTB{ Canape }\n          </a>\n        </h3>\n\n  <span class=\"tag-list\"><a href=\"/tags.html#write-up\" class=\"post-tag\">write-up</a> <a href=\"/tags.html#hackthebox\" class=\"post-tag\">hackthebox</a> <a href=\"/tags.html#machine\" class=\"post-tag\">machine</a> <a href=\"/tags.html#linux\" class=\"post-tag\">linux</a> <a href=\"/tags.html#git\" class=\"post-tag\">git</a> <a href=\"/tags.html#code-analysis\" class=\"post-tag\">code-analysis</a> <a href=\"/tags.html#flask\" class=\"post-tag\">flask</a> <a href=\"/tags.html#python\" class=\"post-tag\">python</a> <a href=\"/tags.html#deserialization\" class=\"post-tag\">deserialization</a> <a href=\"/tags.html#pickle\" class=\"post-tag\">pickle</a> <a href=\"/tags.html#reverse-shell\" class=\"post-tag\">reverse-shell</a> <a href=\"/tags.html#couchdb\" class=\"post-tag\">couchdb</a> <a href=\"/tags.html#fake-pip\" class=\"post-tag\">fake-pip</a> </span><br><br>\n\n<p><strong>Canape</strong> — Linux-тачка средней сложности. Для начала нам предстоит столкнуться с сервером на Flask’е, проанализировать исходники Python-кода, найдя в них мою любимую deserialization-уязвимость, далее нас поджидает повышение привилегий до пользователя через эксплуатацию уязвимости в СУБД CouchDB, и напоследок мы поиграем с методами обмана питоновского менеджера управления пакетами pip с целью выполнения произвольных команд. Последнее подарит root-сессию. Log on, hack in!</p>","link":"https://snovvcrash.rocks/2018/09/28/htb-canape.html","retrieved":1737265073198},{"title":"HTB{ Poison }","contents":"<span class=\"post-meta\">Sep 16, 2018</span>\n        <span class=\"post-meta\">• </span>\n        <span class=\"post-meta time\">12 minutes to read </span>\n        <h3 class=\"post-list-h3\">\n          <a class=\"post-link\" href=\"/2018/09/16/htb-poison.html\">\n            HTB{ Poison }\n          </a>\n        </h3>\n\n  <span class=\"tag-list\"><a href=\"/tags.html#write-up\" class=\"post-tag\">write-up</a> <a href=\"/tags.html#hackthebox\" class=\"post-tag\">hackthebox</a> <a href=\"/tags.html#machine\" class=\"post-tag\">machine</a> <a href=\"/tags.html#freebsd\" class=\"post-tag\">freebsd</a> <a href=\"/tags.html#apache\" class=\"post-tag\">apache</a> <a href=\"/tags.html#apache-tomcat\" class=\"post-tag\">apache-tomcat</a> <a href=\"/tags.html#php\" class=\"post-tag\">php</a> <a href=\"/tags.html#log-poisoning\" class=\"post-tag\">log-poisoning</a> <a href=\"/tags.html#web-shell\" class=\"post-tag\">web-shell</a> <a href=\"/tags.html#reverse-shell\" class=\"post-tag\">reverse-shell</a> <a href=\"/tags.html#lfi\" class=\"post-tag\">lfi</a> <a href=\"/tags.html#phpinfo\" class=\"post-tag\">phpinfo</a> <a href=\"/tags.html#vnc\" class=\"post-tag\">vnc</a> <a href=\"/tags.html#ssh-tunneling\" class=\"post-tag\">ssh-tunneling</a> </span><br><br>\n\n<p><strong>Poison</strong> — одна из самых простых машин с Hack The Box на мой взгляд (если идти самым простым путем, хех), и, по совместительству, моя первая машина с этой платформы. FreeBSD внутри, эта виртуалка предоставляет целых 3 способа прохождения первого этапа: можно забрать авторизационные данные пользователя прямо с веба, если хорошо поискать (самый простой вариант); отравить логи веб-сервера и получить reverse-shell; или же получить RCE с помощью связки LFI + PHPInfo() (самый трудный способ, возможно, не задуманный создателем машины). Далее для повышения привилегий придется пробросить VNC-соединение через SSH-туннель.</p>","link":"https://snovvcrash.rocks/2018/09/16/htb-poison.html","retrieved":1737265073200},{"title":"HTB{ Stratosphere }","contents":"<span class=\"post-meta\">Sep 5, 2018</span>\n        <span class=\"post-meta\">• </span>\n        <span class=\"post-meta time\">21 minutes to read </span>\n        <h3 class=\"post-list-h3\">\n          <a class=\"post-link\" href=\"/2018/09/05/htb-stratoshpere.html\">\n            HTB{ Stratosphere }\n          </a>\n        </h3>\n\n  <span class=\"tag-list\"><a href=\"/tags.html#xakep-ru\" class=\"post-tag\">xakep-ru</a> <a href=\"/tags.html#hackmag-com\" class=\"post-tag\">hackmag-com</a> <a href=\"/tags.html#write-up\" class=\"post-tag\">write-up</a> <a href=\"/tags.html#hackthebox\" class=\"post-tag\">hackthebox</a> <a href=\"/tags.html#machine\" class=\"post-tag\">machine</a> <a href=\"/tags.html#linux\" class=\"post-tag\">linux</a> <a href=\"/tags.html#apache\" class=\"post-tag\">apache</a> <a href=\"/tags.html#apache-struts\" class=\"post-tag\">apache-struts</a> <a href=\"/tags.html#forward-shell\" class=\"post-tag\">forward-shell</a> <a href=\"/tags.html#fwdsh3ll\" class=\"post-tag\">FwdSh3ll</a> <a href=\"/tags.html#python\" class=\"post-tag\">python</a> <a href=\"/tags.html#eval\" class=\"post-tag\">eval</a> <a href=\"/tags.html#library-hijacking\" class=\"post-tag\">library-hijacking</a> <a href=\"/tags.html#john\" class=\"post-tag\">john</a> <a href=\"/tags.html#hashes\" class=\"post-tag\">hashes</a> </span><br><br>\n\n\n<p><strong>Stratosphere</strong> — уютная Linux-машина, которая встретит нас RCE-уязвимостью фреймворка Apache Struts, помучает невозможностью получения стандартного reverse-shell’а, заставив прибегнуть к концепции forward-shell’а, после чего посредством взаимодействия с СУБД MySQL предложит взглянуть на нарушение политики локального хранения паролей, подразнит реверсом дайджестов различных алгоритмов хеширования, а под зановес угостит практикой абьюзинга функции eval() из-под Python’а или же угоном Python-модулей (aka Python Library Hijacking) на выбор (мы угостимся и тем, и другим though). Несмотря на то, что этот бокс идеально вписывается в описанную ранее концепцию “типичной CTF-машины”, найти к ней подход было действительно весело.</p>","link":"https://snovvcrash.rocks/2018/09/05/htb-stratoshpere.html","retrieved":1737265073201},{"title":"HTB{ Celestial }","contents":"<span class=\"post-meta\">Aug 25, 2018</span>\n        <span class=\"post-meta\">• </span>\n        <span class=\"post-meta time\">14 minutes to read </span>\n        <h3 class=\"post-list-h3\">\n          <a class=\"post-link\" href=\"/2018/08/25/htb-celestial.html\">\n            HTB{ Celestial }\n          </a>\n        </h3>\n\n  <span class=\"tag-list\"><a href=\"/tags.html#write-up\" class=\"post-tag\">write-up</a> <a href=\"/tags.html#hackthebox\" class=\"post-tag\">hackthebox</a> <a href=\"/tags.html#machine\" class=\"post-tag\">machine</a> <a href=\"/tags.html#linux\" class=\"post-tag\">linux</a> <a href=\"/tags.html#express\" class=\"post-tag\">express</a> <a href=\"/tags.html#node-js\" class=\"post-tag\">node-js</a> <a href=\"/tags.html#deserialization\" class=\"post-tag\">deserialization</a> <a href=\"/tags.html#python\" class=\"post-tag\">python</a> <a href=\"/tags.html#cron\" class=\"post-tag\">cron</a> </span><br><br>\n\n<p><strong>Celestial</strong> — образцовый представитель типичной CTF-машины. Уязвимый web-сервис дает возможность удаленного выполнения кода (RCE), открывая путь к получению reverse-shell’а, откуда до повышения привилегий до суперпользователя (LPE) в силу небрежно выставленных настроек прав доступа рукой подать. Let’s dive into it!</p>","link":"https://snovvcrash.rocks/2018/08/25/htb-celestial.html","retrieved":1737265073204},{"title":"HTB{ Valentine }","contents":"<span class=\"post-meta\">Aug 14, 2018</span>\n        <span class=\"post-meta\">• </span>\n        <span class=\"post-meta time\">21 minutes to read </span>\n        <h3 class=\"post-list-h3\">\n          <a class=\"post-link\" href=\"/2018/08/14/htb-valentine.html\">\n            HTB{ Valentine }\n          </a>\n        </h3>\n\n  <span class=\"tag-list\"><a href=\"/tags.html#write-up\" class=\"post-tag\">write-up</a> <a href=\"/tags.html#hackthebox\" class=\"post-tag\">hackthebox</a> <a href=\"/tags.html#machine\" class=\"post-tag\">machine</a> <a href=\"/tags.html#linux\" class=\"post-tag\">linux</a> <a href=\"/tags.html#heartbleed\" class=\"post-tag\">heartbleed</a> <a href=\"/tags.html#tmux\" class=\"post-tag\">tmux</a> <a href=\"/tags.html#dirtycow\" class=\"post-tag\">dirtycow</a> </span><br><br>\n\n<p><strong>Valentine</strong> входит в тройку первых решенных мною машин на Hack The Box. Вскрытие будет включать в себя эксплуатацию Heartbleed, уязвимости протокола OpenSSL, наделавшей много шума в свое время, а также использование менеджера терминальных сессий tmux. Как и у большинства машин, у Valentine существует не единственный способ повышения привилегий до суперпользователя, второй, к слову, достаточно грязный, но мы разберем и его.</p>","link":"https://snovvcrash.rocks/2018/08/14/htb-valentine.html","retrieved":1737265073205}]}